{
  "version": 3,
  "sources": ["main.ts", "tools.ts", "themes.ts"],
  "sourcesContent": ["import { App, Editor, ItemView, MarkdownView, Notice, Plugin, PluginSettingTab, Setting, TFile, WorkspaceLeaf, requestUrl, MarkdownRenderer } from 'obsidian';\nimport { PopupController, ButtonController, ExportController } from './tools';\nimport { ensureThemeCssInjected, getJsMindThemeNameFromSetting, THEME_OPTIONS, ThemeName } from './themes';\n\ndeclare global {\n  interface Window {\n    jsMind?: any;\n  }\n}\n\nconst VIEW_TYPE_MINDMAP = 'obsidian-jsmind-mindmap-view';\n\ntype HeadingNode = {\n  id: string;\n  level: number;\n  title: string;\n  start: number;\n  end: number;\n  lineStart: number;\n  headingTextEnd: number;\n  parentId: string | null;\n  children: HeadingNode[];\n  style: 'atx' | 'setext';\n};\n\n// TODO \u6DFB\u52A0\u7F13\u5B58\nlet __mm_lastHeadingsText: string | null = null;\nlet __mm_lastHeadingsRes: HeadingNode[] | null = null;\nlet __mm_lastHeadingsTs: number = 0;\n\n// Normalize trailing colon (full/half width) from titles/labels\nfunction cleanEndColon(s: string): string {\n  try { return (s || '').replace(/[\uFF1A:]\\s*$/u, ''); } catch { return s || ''; }\n}\n\n// Extract top-level list items (ul/ol) within a range as simple content nodes (no nested structure for now)\nfunction extractListItems(markdownText: string, start: number, end: number): string[] {\n  try {\n    const lines = markdownText.split('\\n');\n    // compute line numbers from char positions\n    let acc: number = 0;\n    let startLine = 0;\n    let endLine = lines.length - 1;\n    for (let i = 0; i < lines.length; i++) {\n      const len = lines[i].length + 1;\n      if (acc <= start && start < acc + len) startLine = i;\n      if (acc <= end && end <= acc + len) { endLine = Math.max(i, startLine); break; }\n      acc += len;\n    }\n    const items: string[] = [];\n    const liRegex = /^\\s{0,3}(?:[-*+]\\s+|\\d+\\.\\s+)(.+)$/;\n    let inCode = false;\n    for (let i = startLine; i <= endLine && i < lines.length; i++) {\n      const line = lines[i];\n      if (/^\\s*```/.test(line)) { inCode = !inCode; continue; }\n      if (inCode) continue;\n      const m = line.match(liRegex);\n      if (m) {\n        const text = m[1].trim();\n        if (text.length > 0) items.push(text);\n      }\n    }\n    return items;\n  } catch { return []; }\n}\n\ntype ContentNode = { label: string; children: ContentNode[]; meta?: { task?: boolean; done?: boolean } };\nfunction extractContentTree(markdownText: string, start: number, end: number): ContentNode[] {\n  try {\n    const lines = markdownText.split('\\n');\n    // compute line range\n    let acc = 0, startLine = 0, endLine = lines.length - 1;\n    for (let i = 0; i < lines.length; i++) {\n      const len = lines[i].length + 1;\n      if (acc <= start && start < acc + len) startLine = i;\n      if (acc <= end && end <= acc + len) { endLine = Math.max(i, startLine); break; }\n      acc += len;\n    }\n    // Limit to \"immediate body before first sub-heading\" within [start, end]\n    const atxHeadingRe = /^(#{1,6})\\s+.*$/;\n    const setextH1Re = /^=+\\s*$/;\n    const setextH2Re = /^-+\\s*$/;\n    const isHrTripleDash = (s: string) => /^\\s*---\\s*$/.test(s);\n    let stopAt = endLine;\n    {\n      let inCode = false;\n      for (let i = startLine; i <= endLine && i < lines.length; i++) {\n        const line = lines[i];\n        if (/^\\s*```/.test(line)) { inCode = !inCode; continue; }\n        if (inCode) continue;\n        // ATX heading starts a new section \u2192 stop before it\n        if (atxHeadingRe.test(line)) { stopAt = i - 1; break; }\n        // Setext heading: current line is title, next line is underline\n        const next = (i + 1 <= endLine) ? lines[i + 1] : undefined;\n        if (next && (setextH1Re.test(next) || (setextH2Re.test(next) && !isHrTripleDash(next)))) {\n          stopAt = i - 1;\n          break;\n        }\n      }\n    }\n    endLine = Math.max(startLine, Math.min(endLine, stopAt));\n    // Parse with a simple stack by indent depth\n    const root: ContentNode[] = [];\n    type Frame = { depth: number; items: ContentNode[] };\n    const stack: Frame[] = [{ depth: -1, items: root }];\n    let inCode = false;\n    // --- Regex classes (single-purpose, easier to maintain) ---\n    const BULLET = \"[-*+\\u2013\\u2014\\u2022]\"; // -, *, +, en dash, em dash, bullet\n    const RE_UL_ITEM = new RegExp(`^(\\\\s*)${BULLET}\\\\s+(.+)$`); // unordered list item\n    const RE_INLINE_BOLD = /\\*\\*(.+?)\\*\\*/; // inline bold anywhere\n    const RE_BOLD_LINE = /^(\\s*)\\*\\*(.+?)\\*\\*[\uFF1A:]?.*$/; // '**Title**\uFF1A...' full line\n    const RE_NUM_BOLD = /^(\\s*)(\\d+)\\.\\s*\\*\\*(.+?)\\*\\*[\uFF1A:]?.*$/; // '1.**Title**\uFF1A...'\n    const RE_TASK_UNCHECKED = new RegExp(`^(\\\\s*)${BULLET}\\\\s*\\\\[\\\\s\\\\]\\\\s*(.+)$`); // '- [ ] text'\n    const RE_TASK_CHECKED = new RegExp(`^(\\\\s*)${BULLET}\\\\s*\\\\[(?:x|X)\\\\]\\\\s*(.+)$`); // '- [x] text'\n    const RE_OL_ITEM = /^(\\s*)(\\d+)\\.\\s*(.+)$/; // ordered list item (allow no space)\n    // ---------------------------------------------------------\n    let structuralDepthBase = 0; // 0 for none, increases after bold/italic blocks\n    for (let i = startLine; i <= endLine && i < lines.length; i++) {\n      const raw = lines[i];\n      if (/^\\s*$/.test(raw)) { structuralDepthBase = 0; continue; }\n      if (/^\\s*```/.test(raw)) { inCode = !inCode; continue; }\n      if (inCode) continue;\n      let label: string | null = null;\n      let depthSpaces = 0;\n      // 1) Numbered + bold (e.g., '1.**RAG**\uFF1A')\n      {\n        const m = raw.match(RE_NUM_BOLD);\n        if (m) {\n          depthSpaces = m[1].length;\n          const num = (m[2] || '').trim();\n          const txt = (m[3] || '').trim();\n          label = `${num}. ${txt}`;\n        }\n      }\n      // 2) Bold-line start (e.g., '**\u9884\u7F6E\u914D\u8272\u65B9\u6848**\uFF1A...')\n      if (!label) {\n        const m = raw.match(RE_BOLD_LINE);\n        if (m) {\n          depthSpaces = 0;\n          label = (m[2] || '').trim();\n        }\n      }\n      // 3) Task list items '- [ ] text' / '- [x] text' (prefer bold inside if present)\n      if (!label) {\n        let m = raw.match(RE_TASK_UNCHECKED);\n        if (!m) m = raw.match(RE_TASK_CHECKED);\n        if (m) {\n          depthSpaces = m[1].length;\n          const taskText = (m[2] || '').trim();\n          const b = taskText.match(RE_INLINE_BOLD);\n          label = (b ? b[1] : taskText).trim();\n          // stash meta for checkbox rendering\n          // we will create the node immediately here to preserve meta,\n          // then continue to the next line\n          const depth = Math.max(Math.floor(depthSpaces / 2), structuralDepthBase);\n          while (stack.length && stack[stack.length - 1].depth >= depth) stack.pop();\n          const container = stack[stack.length - 1].items;\n          const cleanedLabel = cleanEndColon(label);\n          const node: ContentNode = { label: cleanedLabel, children: [], meta: { task: true, done: !!raw.match(RE_TASK_CHECKED) } };\n          container.push(node);\n          stack.push({ depth, items: node.children });\n          continue;\n        }\n      }\n      // 4) List items\n      if (!label) {\n        // Ordered list\n        const mol = raw.match(RE_OL_ITEM);\n        if (mol) {\n          depthSpaces = mol[1].length;\n          const num = (mol[2] || '').trim();\n          const liText = (mol[3] || '').trim();\n          const b = liText.match(RE_INLINE_BOLD);\n          const core = (b ? (b[1] || '').trim() : liText);\n          label = `${num}. ${core}`;\n        } else {\n          // Unordered list\n          const mul = raw.match(RE_UL_ITEM);\n          if (mul) {\n            depthSpaces = mul[1].length;\n            const liText = (mul[2] || '').trim();\n            const b = liText.match(RE_INLINE_BOLD);\n            label = (b ? (b[1] || '').trim() : liText);\n          }\n        }\n      }\n      // 5) Standalone italic blocks (optional)\n      if (!label) {\n        const bold = raw.match(/^\\s*\\*\\*(.+?)\\*\\*\\s*$/);\n        const italic = raw.match(/^\\s*\\*(.+?)\\*\\s*$/) || raw.match(/^\\s*_(.+?)_\\s*$/);\n        if (bold) { label = bold[1].trim(); depthSpaces = 0; }\n        else if (italic) { label = italic[1].trim(); depthSpaces = 2; }\n      }\n      if (!label) continue;\n      let depth = Math.floor(depthSpaces / 2);\n      // Apply structural base so that bold > italic > list hierarchy is preserved\n      if (/^\\s*\\*\\*(.+?)\\*\\*\\s*$/.test(raw)) {\n        depth = 0;\n        structuralDepthBase = 1; // next block goes under bold\n      } else if (/^\\s*(?:\\*.+?\\*|_.+?_)\\s*$/.test(raw)) {\n        depth = Math.max(structuralDepthBase, 1);\n        structuralDepthBase = depth + 1; // lists will go under italic\n      } else {\n        depth = Math.max(depth, structuralDepthBase);\n      }\n      while (stack.length && stack[stack.length - 1].depth >= depth) stack.pop();\n      const container = stack[stack.length - 1].items;\n      const cleanedLabel = cleanEndColon(label || '');\n      const node: ContentNode = { label: cleanedLabel, children: [] };\n      container.push(node);\n      stack.push({ depth, items: node.children });\n    }\n    return root;\n  } catch { return []; }\n}\n\nfunction computeHeadingSections(markdownText: string): HeadingNode[] {\n  try {\n    const now = Date.now();\n    if (__mm_lastHeadingsRes && (now - __mm_lastHeadingsTs) <= 3000) {\n      if (__mm_lastHeadingsText != null && __mm_lastHeadingsText.length === markdownText.length) {\n        return __mm_lastHeadingsRes;\n      }\n    }\n  } catch {}\n  const lines = markdownText.split(/\\n/);\n  const headingRegex = /^(#{1,6})\\s+(.*)$/;\n  const slugify = (s: string) => {\n    try {\n      const base = s.trim().toLowerCase();\n      const collapsed = base.replace(/\\s+/g, '-');\n      const cleaned = collapsed.replace(/[^a-z0-9\\-\\u4e00-\\u9fa5]+/gi, '');\n      const trimmed = cleaned.replace(/^-+|-+$/g, '');\n      return trimmed || 'untitled';\n    } catch { return 'untitled'; }\n  };\n  const slugCounts = new Map<string, number>();\n  const headingsTemp: Array<Omit<HeadingNode, 'end' | 'headingTextEnd' | 'children' | 'parentId'> & { raw: string; style: 'atx' | 'setext' }> = [];\n  let offset = 0;\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const match = line.match(headingRegex);\n    if (match) {\n      const hashes = match[1];\n      const title = match[2].trim();\n      const start = offset;\n      const headingTextEnd = start + line.length; // end of heading line\n      const slug = slugify(title);\n      const cnt = (slugCounts.get(slug) || 0) + 1; slugCounts.set(slug, cnt);\n      const hid = cnt === 1 ? `h_${slug}` : `h_${slug}_${cnt}`;\n      headingsTemp.push({\n        id: hid,\n        level: hashes.length,\n        title,\n        start,\n        lineStart: i,\n        raw: line,\n        style: 'atx',\n      });\n    } else if (i + 1 < lines.length) {\n      const next = lines[i + 1];\n      if (/^=+\\s*$/.test(next)) {\n        const start = offset;\n        const title = line.trim();\n        const headingTextEnd = start + line.length; // only first line text\n        const slug = slugify(title);\n        const cnt = (slugCounts.get(slug) || 0) + 1; slugCounts.set(slug, cnt);\n        const hid = cnt === 1 ? `h_${slug}` : `h_${slug}_${cnt}`;\n        headingsTemp.push({\n          id: hid,\n          level: 1,\n          title,\n          start,\n          lineStart: i,\n          raw: line + '\\n' + next,\n          style: 'setext',\n        });\n      } else if (/^-+\\s*$/.test(next) && !/^\\s*---\\s*$/.test(next)) {\n        const start = offset;\n        const title = line.trim();\n        const headingTextEnd = start + line.length;\n        const slug = slugify(title);\n        const cnt = (slugCounts.get(slug) || 0) + 1; slugCounts.set(slug, cnt);\n        const hid = cnt === 1 ? `h_${slug}` : `h_${slug}_${cnt}`;\n        headingsTemp.push({\n          id: hid,\n          level: 2,\n          title,\n          start,\n          lineStart: i,\n          raw: line + '\\n' + next,\n          style: 'setext',\n        });\n      }\n    }\n    offset += line.length + 1; // +1 for split removed newline\n  }\n  const headings: HeadingNode[] = headingsTemp.map((h, idx) => ({\n    id: h.id,\n    level: h.level,\n    title: h.title,\n    start: h.start,\n    end: markdownText.length,\n    lineStart: h.lineStart,\n    headingTextEnd: h.start + (lines[h.lineStart]?.length ?? 0),\n    parentId: null,\n    children: [],\n    style: h.style,\n  }));\n  for (let i = 0; i < headings.length; i++) {\n    for (let j = i + 1; j < headings.length; j++) {\n      if (headings[j].level <= headings[i].level) {\n        headings[i].end = headings[j].start - 1; // up to the char before next heading\n        break;\n      }\n    }\n  }\n  const stack: HeadingNode[] = [];\n  for (const h of headings) {\n    while (stack.length > 0 && stack[stack.length - 1].level >= h.level) {\n      stack.pop();\n    }\n    h.parentId = stack.length ? stack[stack.length - 1].id : null;\n    if (stack.length) {\n      stack[stack.length - 1].children.push(h);\n    }\n    stack.push(h);\n  }\n  try {\n    __mm_lastHeadingsText = markdownText;\n    __mm_lastHeadingsRes = headings;\n    __mm_lastHeadingsTs = Date.now();\n  } catch {}\n  return headings;\n}\n\nfunction buildJsMindTreeFromHeadings(headings: HeadingNode[], fileName: string) {\n  const firstH1 = headings.find(h => h.level === 1);\n  let rootId: string;\n  let rootTopic: string;\n  if (firstH1) {\n    rootId = firstH1.id;\n    rootTopic = cleanEndColon(firstH1.title || fileName);\n  } else {\n    rootId = `virtual_root_${fileName}`;\n    rootTopic = cleanEndColon(fileName.replace(/\\.md$/i, ''));\n  }\n  const byId = new Map<string, any>();\n  const root: any = { id: rootId, topic: rootTopic, children: [] };\n  byId.set(rootId, root);\n  for (const h of headings) {\n    if (firstH1 && h.id === firstH1.id) continue;\n    const node: any = { id: h.id, topic: cleanEndColon(h.title), children: [] };\n    byId.set(h.id, node);\n  }\n  for (const h of headings) {\n    if (firstH1 && h.id === firstH1.id) continue;\n    const parentKey = h.parentId ?? (firstH1 ? firstH1.id : rootId);\n    const parent = byId.get(parentKey) ?? root;\n    parent.children.push(byId.get(h.id));\n  }\n  return { meta: { name: fileName }, format: 'node_tree', data: root };\n}\n\nfunction buildJsMindTreeWithContent(headings: HeadingNode[], fileName: string, markdownText: string, includeContent: boolean): { mind: any; contentParentMap: Map<string, string> } {\n  const firstH1 = headings.find(h => h.level === 1);\n  let rootId: string;\n  let rootTopic: string;\n  if (firstH1) {\n    rootId = firstH1.id;\n    rootTopic = cleanEndColon(firstH1.title || fileName);\n  } else {\n    rootId = `virtual_root_${fileName}`;\n    rootTopic = cleanEndColon(fileName.replace(/\\.md$/i, ''));\n  }\n  const byId = new Map<string, any>();\n  const root: any = { id: rootId, topic: rootTopic, children: [] };\n  byId.set(rootId, root);\n  for (const h of headings) {\n    if (firstH1 && h.id === firstH1.id) continue;\n    const node: any = { id: h.id, topic: cleanEndColon(h.title), children: [] };\n    byId.set(h.id, node);\n  }\n  const contentParentMap = new Map<string, string>();\n  // Helper to add content tree under root once, for a given text range\n  let rootContentSeq = 0;\n  const addRootContentRange = (start: number, end: number) => {\n    const tree = extractContentTree(markdownText, start, end);\n    const addChildren = (host: any, children: any[]) => {\n      for (const child of children) {\n        rootContentSeq += 1;\n        const cid = `c_${rootId}_${rootContentSeq}`;\n        const cnode: any = { id: cid, topic: child.label, children: [] };\n        if ((child as any).meta) { cnode.data = { meta: (child as any).meta }; }\n        host.children.push(cnode);\n        contentParentMap.set(cid, rootId);\n        if (Array.isArray(child.children) && child.children.length > 0) {\n          addChildren(cnode, child.children);\n        }\n      }\n    };\n    addChildren(root, tree);\n  };\n\n  if (includeContent) {\n    if (headings.length === 0) {\n      // Whole-file content as root content\n      addRootContentRange(0, markdownText.length);\n      return { mind: { meta: { name: fileName }, format: 'node_tree', data: root }, contentParentMap };\n    } else {\n      // Leading content before the first heading as root content\n      try {\n        const firstHeadingStart = Math.max(0, headings[0].start);\n        if (firstHeadingStart > 0) {\n          addRootContentRange(0, firstHeadingStart - 1);\n        }\n      } catch {}\n    }\n  }\n  for (const h of headings) {\n    if (firstH1 && h.id === firstH1.id) continue;\n    const parentKey = h.parentId ?? (firstH1 ? firstH1.id : rootId);\n    const parent = byId.get(parentKey) ?? root;\n    const headingNode = byId.get(h.id);\n    parent.children.push(headingNode);\n    if (includeContent) {\n      const itemsTree = extractContentTree(markdownText, h.headingTextEnd + 1, h.end);\n      let seq = 0;\n      const addChildren = (host: any, children: any[]) => {\n        for (const child of children) {\n          seq += 1;\n          const cid = `c_${h.id}_${seq}`;\n          const cnode: any = { id: cid, topic: child.label, children: [] };\n          if ((child as any).meta) { cnode.data = { meta: (child as any).meta }; }\n          host.children.push(cnode);\n          contentParentMap.set(cid, h.id);\n          if (Array.isArray(child.children) && child.children.length > 0) {\n            addChildren(cnode, child.children);\n          }\n        }\n      };\n      addChildren(headingNode, itemsTree);\n    }\n  }\n  return { mind: { meta: { name: fileName }, format: 'node_tree', data: root }, contentParentMap };\n}\n\nclass MindmapView extends ItemView {\n  // References to Obsidian/plugin and jsMind host\n  private plugin: MindmapPlugin;                      // owning plugin (for settings/persistence)\n  private file: TFile | null = null;                  // current markdown file shown in this view\n  private containerElDiv: HTMLDivElement | null = null; // mindmap container element\n  private jm: any | null = null;                      // jsMind instance\n\n  // Parsed markdown cache (structure used to build/update mindmap)\n  private headingsCache: HeadingNode[] = [];\n\n  // Selection and sync state (mindmap <-> markdown)\n  private lastSyncedNodeId: string | null = null;     // last node id driven into selection to dedupe work\n  // removed: private editorSyncIntervalId: number | null = null;\n\n  // Viewport/centering management\n  private prevViewport: { nodesTransform: string | null; canvasTransform: string | null } | null = null; // saved transforms across re-render\n  private allowCenterRoot: boolean = false;           // only allow jm to center root when explicitly enabled\n  private centerRootWrapped: boolean = false;         // ensure we wrap jsMind center methods only once\n\n  // UI interaction timing\n  private revealTimeoutId: number | null = null;      // debounce for click-to-reveal in editor\n  private lastDblClickAtMs: number = 0;               // last dblclick to differentiate from single click\n\n  // Visibility/suspension controls (skip heavy work when hidden/offscreen)\n  private isSuspended: boolean = false;               // whether view is currently suspended\n  private pendingDirty: boolean = false;              // if changes occurred while suspended, refresh on resume\n\n  // Hover popup handled by controller\n\n  // Stable id mapping (parent chain + sibling index)\n  private idToStableKey: Map<string, string> = new Map(); // runtime id -> stable key\n  private stableKeyToId: Map<string, string> = new Map(); // stable key -> runtime id\n  // Content nodes mapping (content-id -> parent heading-id)\n  private contentParentMap: Map<string, string> = new Map();\n\n  // FSM for sync control\n  private syncState: 'scroll' | 'edit' | 'preview' = 'scroll';\n  // Controllers (OOP) for UI helpers\n  private popup: PopupController = new PopupController();\n  private buttons: ButtonController = new ButtonController();\n  private exporter: ExportController = new ExportController();\n  private enterScroll() { \n    if (this.syncState === 'preview') return;\n    if (this.syncState === 'edit') return;\n    if (this.syncState === 'scroll') return;\n    this.syncState = 'scroll';\n    this.hideAddButton();\n  }\n  private forceEnterScroll() { this.syncState = 'scroll'; this.hideAddButton(); }\n  private enterEdit() { this.syncState = 'edit'; this.hideAddButton(); }\n  private enterPreview() { this.syncState = 'preview'; }\n  private shouldFollowScroll(): boolean { return this.syncState === 'scroll'; }\n  private shouldMindmapDriveMarkdown(): boolean { return this.syncState === 'preview'; }\n  private shouldCenterOnMarkdownSelection(): boolean { return this.syncState === 'edit'; }\n\n  // Scroll sync (follow markdown scrolling)\n  private scrollSyncEl: HTMLElement | null = null;    // current scroller we listen to\n  private scrollSyncHandler: ((e: Event) => void) | null = null; // bound scroll handler\n  private scrollSyncLastRunMs: number = 0;            // throttle timestamp (ms) for scroll-driven sync\n  private scrollSyncPendingTimeoutId: number | null = null; // pending trailing call id\n\n  // Cached raw file text (for popup extraction and incremental diffs)\n  private lastFileContent: string = '';\n  private getJsMindEventName(type: any, data: any): string {\n    try {\n      if (typeof type === 'string') return type;\n      if (data && typeof data.evt === 'string') return data.evt;\n    } catch {}\n    return '';\n  }\n  private getEventNodeId(data: any): string {\n    try {\n      if (!data) return '';\n      if (typeof data.node === 'string') return data.node as string;\n      if (data.node && typeof data.node.id === 'string') return data.node.id as string;\n      if (Array.isArray(data.data) && typeof data.data[0] === 'string') return data.data[0] as string;\n      if (typeof data.id === 'string') return data.id as string;\n    } catch {}\n    return '';\n  }\n  private getEventNodeTopic(data: any): string {\n    try {\n      if (!data) return '';\n      if (typeof data.topic === 'string') return data.topic as string;\n      if (data.node && typeof (data.node as any).topic === 'string') return (data.node as any).topic as string;\n      if (Array.isArray(data.data) && typeof data.data[1] === 'string') return data.data[1] as string;\n    } catch {}\n    return '';\n  }\n  private isContentNode(id: string): boolean { return typeof id === 'string' && id.startsWith('c_'); }\n  private resolveHeadingId(id: string): string | null {\n    if (!id) return null;\n    if (this.isContentNode(id)) {\n      const parent = this.contentParentMap.get(id);\n      return parent || null;\n    }\n    return id;\n  }\n  private isMindmapEditingActive(): boolean {\n    try {\n      if (!this.containerElDiv) return false;\n      const root = this.containerElDiv.querySelector('.jsmind-inner') || this.containerElDiv;\n      if (!root) return false;\n      return !!(root.querySelector('input, textarea, [contenteditable=\"true\"]'));\n    } catch { return false; }\n  }\n\n  private isViewVisible(): boolean {\n    try {\n      if (!this.containerElDiv) return false;\n      if (!document.body.contains(this.containerElDiv)) return false;\n      const cs = getComputedStyle(this.containerElDiv);\n      if (cs.display === 'none' || cs.visibility === 'hidden') return false;\n      if (this.containerElDiv.offsetWidth === 0 || this.containerElDiv.offsetHeight === 0) return false;\n      const rects = this.containerElDiv.getClientRects();\n      return rects.length > 0;\n    } catch { return true; }\n  }\n\n  private setSuspended(suspend: boolean) {\n    if (this.isSuspended === suspend) return;\n    this.isSuspended = suspend;\n    if (suspend) {\n      this.hideAddButton();\n    } else {\n      // When resuming, refresh if there were changes while hidden\n      if (this.pendingDirty || !this.jm) {\n        this.pendingDirty = false;\n        this.refresh().catch(() => {});\n      } else {\n        try { this.jm && this.jm.resize && this.jm.resize(); } catch {}\n        this.buttons.updatePosition();\n      }\n    }\n  }\n\n  constructor(leaf: WorkspaceLeaf, plugin: MindmapPlugin) {\n    super(leaf);\n    this.plugin = plugin;\n    // initialize controllers with stable deps where available\n    this.popup.app = this.app;\n    this.popup.plugin = this.plugin;\n    this.popup.shouldMindmapDriveMarkdown = () => this.shouldMindmapDriveMarkdown();\n    this.popup.isMindmapEditingActive = () => this.isMindmapEditingActive();\n    this.popup.computeHeadingSections = (text: string) => computeHeadingSections(text);\n    this.buttons.app = this.app;\n    this.buttons.plugin = this.plugin;\n    this.buttons.shouldMindmapDriveMarkdown = () => this.shouldMindmapDriveMarkdown();\n    this.buttons.isMindmapEditingActive = () => this.isMindmapEditingActive();\n    this.buttons.computeHeadingSections = (text: string) => computeHeadingSections(text);\n    this.buttons.deleteHeadingById = (id: string) => this.deleteHeadingById(id);\n  }\n\n  getViewType(): string {\n    return VIEW_TYPE_MINDMAP;\n  }\n\n  getDisplayText(): string {\n    return 'Mindmap Preview';\n  }\n\n  async onOpen() {\n    this.contentEl.empty();\n    // Ensure the view takes available height for canvas/SVG rendering\n    this.contentEl.style.display = 'flex';\n    this.contentEl.style.flexDirection = 'column';\n    this.contentEl.style.height = '100%';\n    ;(this.containerEl as HTMLElement).style.height = '100%';\n    // Inject minimal toolbar styles once\n    try {\n      const styleId = 'obsidian-jsmind-toolbar-style';\n      if (!document.getElementById(styleId)) {\n        const st = document.createElement('style');\n        st.id = styleId;\n        st.textContent = `\n          .mm-toolbar { display: flex; align-items: center; gap: 6px; padding: 4px 0; }\n          .mm-toolbar button {\n            appearance: none; border: 1px solid var(--background-modifier-border);\n            background: var(--interactive-normal); color: var(--text-normal);\n            padding: 2px 8px; border-radius: 5px; font-size: 12px; line-height: 1.2; cursor: pointer;\n          }\n          .mm-toolbar button:hover { background: var(--interactive-hover); }\n        `;\n        document.head.appendChild(st);\n      }\n      const popupCssId = 'obsidian-jsmind-popup-style';\n      if (!document.getElementById(popupCssId)) {\n        const st2 = document.createElement('style');\n        st2.id = popupCssId;\n        st2.textContent = `\n          .mm-popup { padding: 4px 6px; user-select: text; -webkit-user-select: text; }\n          .mm-popup * { user-select: text; -webkit-user-select: text; }\n          .mm-popup-title { font-weight: 600; margin: 0 0 0.25em 6px; font-size: 0.95em; }\n          .mm-popup.markdown-rendered { line-height: 1.4; }\n          .mm-popup.markdown-rendered p,\n          .mm-popup.markdown-rendered ul,\n          .mm-popup.markdown-rendered ol,\n          .mm-popup.markdown-rendered pre,\n          .mm-popup.markdown-rendered blockquote,\n          .mm-popup.markdown-rendered table,\n          .mm-popup.markdown-rendered h1,\n          .mm-popup.markdown-rendered h2,\n          .mm-popup.markdown-rendered h3,\n          .mm-popup.markdown-rendered h4,\n          .mm-popup.markdown-rendered h5,\n          .mm-popup.markdown-rendered h6 { margin: 0.25em 0; }\n          .mm-popup.markdown-rendered ul,\n          .mm-popup.markdown-rendered ol { padding-left: 1.1em; }\n          .mm-popup.markdown-rendered pre { padding: 4px 6px; }\n        `;\n        document.head.appendChild(st2);\n      }\n      // Smooth scroll behavior for jsMind inner container and host container\n      const smoothId = 'obsidian-jsmind-smooth-scroll-style';\n      if (!document.getElementById(smoothId)) {\n        const st3 = document.createElement('style');\n        st3.id = smoothId;\n        st3.textContent = `\n          /* Enable smooth programmatic scrolling */\n          #jsmind_container { scroll-behavior: smooth; }\n          .jsmind-inner { scroll-behavior: smooth; }\n          /* Content node visuals: no box, only a bottom line */\n          jmnode.mm-content-node { background: transparent !important; border: none !important; box-shadow: none !important; border-radius: 0 !important; padding: 0 2px 2px 2px; }\n          jmnode.mm-content-node { border-bottom: 1px solid var(--background-modifier-border); }\n        `;\n        document.head.appendChild(st3);\n      }\n      // Inject node themes CSS once\n      ensureThemeCssInjected(document);\n      // Inject strong override CSS for content nodes (ensure high specificity)\n      this.injectContentNodeOverrideCss();\n    } catch {}\n    const toolbar = this.contentEl.createDiv({ cls: 'mm-toolbar' });\n    const refreshBtn = toolbar.createEl('button', { text: 'Refresh' });\n    const followBtn = toolbar.createEl('button', { text: 'Follow Scroll' });\n    // Mount exporter before include toggle\n    this.exporter.containerElDiv = this.containerElDiv;\n    this.exporter.mount(toolbar);\n\n    // Include content toggle (ul/ol as content nodes)\n    const includeWrap = toolbar.createEl('label');\n    includeWrap.style.display = 'flex';\n    includeWrap.style.alignItems = 'center';\n    includeWrap.style.gap = '6px';\n    const includeCb = includeWrap.createEl('input', { type: 'checkbox' });\n    includeCb.checked = !!((this.plugin as any).settings?.includeContent);\n    includeWrap.createSpan({ text: 'Include content' });\n\n    const container = this.contentEl.createDiv();\n    container.id = 'jsmind_container';\n    container.style.width = '100%';\n    container.style.flex = '1 1 auto';\n    container.style.height = '100%';\n    container.style.minHeight = '400px';\n    container.style.position = 'relative';\n    this.containerElDiv = container;\n    // wire DOM into controllers\n    this.popup.containerElDiv = this.containerElDiv;\n    this.buttons.containerElDiv = this.containerElDiv;\n    // exporter already mounted above\n    refreshBtn.addEventListener('click', () => this.refresh());\n    followBtn.addEventListener('click', () => {\n      // Follow is now purely based on active view + setting; nothing to toggle here\n      this.forceEnterScroll();\n    });\n    includeCb.addEventListener('change', async () => {\n      try {\n        (this.plugin as any).settings.includeContent = !!includeCb.checked;\n        await (this.plugin as any).saveData({ collapsedByFile: (this.plugin as any).collapsedByFile, autoFollow: (this.plugin as any).settings.autoFollow, theme: (this.plugin as any).settings.theme, enablePopup: (this.plugin as any).settings.enablePopup, includeContent: (this.plugin as any).settings.includeContent });\n        await this.refresh();\n      } catch {}\n    });\n\n    try {\n      await this.ensureJsMindLoaded();\n    } catch (e) {\n      new Notice('Failed to load jsMind. Check network/CSP. Retrying with fallback...');\n      // Try fallback once more\n      try {\n        await this.ensureJsMindLoaded(true);\n      } catch (err) {\n        new Notice('jsMind could not be loaded. Mindmap disabled.');\n        return;\n      }\n    }\n    // No driver arbitration: single-direction via active view only\n    await this.refresh();\n    // after refresh, jm exists; propagate instance\n    this.popup.jm = this.jm;\n    this.buttons.jm = this.jm;\n    this.exporter.jm = this.jm;\n    this.exporter.app = this.app;\n    (this.exporter as any).plugin = this.plugin;\n    this.exporter.file = this.file || null;\n\n    // Observe size changes for reliable canvas resizing\n    try {\n      const ro = new ResizeObserver(() => {\n        if (this.jm) {\n          try { this.jm.resize && this.jm.resize(); } catch {}\n        }\n        this.buttons.updatePosition();\n      });\n      if (this.containerElDiv) ro.observe(this.containerElDiv);\n      this.register(() => ro.disconnect());\n    } catch {}\n\n    // Observe visibility to suspend/resume rendering work\n    try {\n      if (this.containerElDiv) {\n        const iv = new IntersectionObserver((entries) => {\n          const ent = entries[0];\n          if (!ent) return;\n          const visible = ent.isIntersecting && ent.intersectionRatio > 0;\n          this.setSuspended(!visible);\n        }, { root: this.containerElDiv.parentElement || undefined });\n        iv.observe(this.containerElDiv);\n        this.register(() => iv.disconnect());\n      }\n      // Also listen to layout changes as a fallback\n      this.registerEvent(this.app.workspace.on('layout-change', () => {\n        const visible = this.isViewVisible();\n        this.setSuspended(!visible);\n      }));\n    } catch {}\n\n    // Attach editor -> mindmap selection sync\n    this.attachEditorSync();\n\n    this.registerEvent(this.app.vault.on('modify', async (file) => {\n      if (this.file && file.path === this.file.path) {\n        if (this.isSuspended || !this.isViewVisible()) {\n          this.pendingDirty = true;\n          return;\n        }\n        await this.softSyncFromDisk();\n      }\n    }));\n\n    // Follow markdown file changes (any leaf switching to a markdown file)\n    this.registerEvent(this.app.workspace.on('file-open', async (file) => {\n      if (!file) return;\n      try {\n        // Only react to markdown files and only if different from current\n        // @ts-ignore\n        const ext = (file as any).extension || (file.name?.split('.').pop() ?? '');\n        if (ext.toLowerCase() === 'md' && file.path !== this.file?.path) {\n          await this.setFile(file);\n          // reattach scroll sync on file switch\n          try { this.attachEditorSync(); } catch {}\n        }\n      } catch {}\n    }));\n\n    // Also follow active leaf change to catch focus changes between panes\n    this.registerEvent(this.app.workspace.on('active-leaf-change', async (leaf) => {\n      try {\n        const mv = leaf?.view as MarkdownView | undefined;\n        if (mv?.file) {\n          // @ts-ignore\n          const ext = (mv.file as any).extension || (mv.file.name?.split('.').pop() ?? '');\n          if (ext.toLowerCase() === 'md' && mv.file.path !== this.file?.path) {\n            await this.setFile(mv.file);\n            // reattach scroll sync on leaf change\n            try { this.attachEditorSync(); } catch {}\n          }\n        }\n      } catch {}\n    }));\n  }\n\n  async setFile(file: TFile) {\n    this.file = file;\n    this.lastSyncedNodeId = null;\n    this.forceEnterScroll();\n    // No driver reset needed\n    if (this.containerElDiv) await this.refresh();\n    // propagate dynamic file into controllers\n    this.popup.file = this.file;\n    this.buttons.file = this.file;\n  }\n\n  async onClose() {\n    this.jm = null;\n    this.containerElDiv = null;\n  }\n\n  private async ensureJsMindLoaded(useFallback: boolean = false): Promise<void> {\n    const pluginBase = `${this.app.vault.configDir}/plugins/obsidian-mindmap-jsmind`;\n    const localCssVaultPath = `${pluginBase}/vendor/jsmind/style/jsmind.css`;\n    const localJsVaultPath = `${pluginBase}/vendor/jsmind/es6/jsmind.js`;\n    const legacyScreenshotVaultPath = `${pluginBase}/vendor/jsmind/es6/jsmind.screenshot.js`;\n    const domToImageVaultPath = `${pluginBase}/vendor/dom-to-image/dom-to-image.min.js`;\n    const localCssUrl = this.app.vault.adapter.getResourcePath(localCssVaultPath);\n    const localJsUrl = this.app.vault.adapter.getResourcePath(localJsVaultPath);\n    const domToImageUrl = this.app.vault.adapter.getResourcePath(domToImageVaultPath);\n    const legacyScreenshotUrl = this.app.vault.adapter.getResourcePath(legacyScreenshotVaultPath);\n\n    // Skip <link rel=\"stylesheet\"> to avoid CSP style-src blocking external URLs.\n    // We'll inline the full CSS content below into a <style> tag instead.\n\n    // Inline the FULL official jsMind CSS for complete styling (prefer local), compliant with CSP\n    const fullCssId = 'jsmind-css-inline-full';\n    try {\n      const existing = document.getElementById(fullCssId) as HTMLStyleElement | null;\n      const cssUrl = this.app.vault.adapter.getResourcePath(localCssVaultPath);\n      const res = await fetch(cssUrl);\n      const text = await res.text();\n      if (text && text.length > 0) {\n        if (!existing) {\n          const style = document.createElement('style');\n          style.id = fullCssId;\n          style.textContent = text;\n          document.head.appendChild(style);\n        } else {\n          existing.textContent = text;\n        }\n      }\n    } catch {}\n\n    const tryInject = (url: string) => new Promise<void>((resolve, reject) => {\n      const scriptId = `jsmind-js-${btoa(url).replace(/=/g, '')}`;\n      if (document.getElementById(scriptId)) {\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.id = scriptId;\n      script.src = url;\n      script.async = true;\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('Failed to load ' + url));\n      document.head.appendChild(script);\n    });\n\n    // Prefer local vendored JS\n    const localSrc = localJsUrl;\n    try {\n      if (!window.jsMind) {\n        await tryInject(localSrc);\n      }\n    } catch {}\n\n    // Last-resort: try reading local JS text and eval if inject failed\n    try {\n      if (!window.jsMind) {\n        const jsRes = await fetch(localJsUrl);\n        const jsText = await jsRes.text();\n        const script = document.createElement('script');\n        script.text = jsText;\n        document.head.appendChild(script);\n      }\n    } catch {}\n\n    if (!window.jsMind) throw new Error('Unable to load jsMind');\n\n    // Ensure dom-to-image is available before loading ES6 screenshot plugin.\n    // Force global resolution by neutralizing CommonJS/AMD during evaluation if needed.\n    if (!(window as any).domtoimage) {\n      try {\n        const res = await fetch(domToImageUrl);\n        const txt = await res.text();\n        const s = document.createElement('script');\n        s.text = `;(function(g){ var module; var exports; var define; (function(){ ${txt}\\n }).call(g); })(window);`;\n        document.head.appendChild(s);\n      } catch {\n        try { await tryInject(domToImageUrl); } catch {}\n      }\n    }\n\n    // Inject screenshot plugin (ES6 build requires dom-to-image)\n    const pluginScriptId = 'jsmind-screenshot-plugin';\n    if (!document.getElementById(pluginScriptId)) {\n      try {\n        await tryInject(legacyScreenshotUrl);\n        const tag = document.getElementById(`jsmind-js-${btoa(legacyScreenshotUrl).replace(/=/g, '')}`);\n        if (tag) tag.id = pluginScriptId;\n      } catch {\n        try {\n          const res = await fetch(legacyScreenshotUrl);\n          const txt = await res.text();\n          const s = document.createElement('script');\n          s.id = pluginScriptId;\n          s.text = txt;\n          document.head.appendChild(s);\n        } catch {}\n      }\n    }\n  }\n\n  private async refresh() {\n    if (!this.file) {\n      const active = this.app.workspace.getActiveFile();\n      if (!active) return;\n      this.file = active;\n    }\n    if (this.isSuspended || !this.isViewVisible()) {\n      this.pendingDirty = true;\n      return;\n    }\n    // Stop and clear floating buttons before rebuilding DOM\n    this.hideAddButton();\n    // Capture viewport (transform) and selection before rebuild\n    const prevSelectedId = (() => {\n      try { return this.jm?.get_selected_node?.()?.id ?? null; } catch { return null; }\n    })();\n    this.prevViewport = this.captureViewport();\n\n    const content = await this.app.vault.read(this.file);\n    this.lastFileContent = content;\n    // keep controllers updated with latest content & headings\n    this.popup.lastFileContent = this.lastFileContent;\n    this.headingsCache = computeHeadingSections(content);\n    this.popup.headingsCache = this.headingsCache;\n    this.rebuildStableKeyIndex();\n    const includeContent = !!((this.plugin as any).settings?.includeContent);\n    let mind: any;\n    if (includeContent) {\n      const built = buildJsMindTreeWithContent(this.headingsCache, this.file.name, content, true);\n      mind = built.mind;\n      this.contentParentMap = built.contentParentMap;\n    } else {\n      mind = buildJsMindTreeFromHeadings(this.headingsCache, this.file.name);\n      this.contentParentMap = new Map();\n    }\n    if (!this.containerElDiv || !window.jsMind) return;\n    this.containerElDiv.empty();\n    this.containerElDiv.id = 'jsmind_container';\n    const themeKey: ThemeName = (this.plugin as any).settings?.theme || 'default';\n    const options: any = { container: 'jsmind_container', theme: getJsMindThemeNameFromSetting(themeKey), editable: true, mode: 'side', view: { engine: 'svg' ,expander_style: 'number', draggable: false, line_width: 1 }};\n    options.view.custom_node_render = (jm: any, ele: HTMLElement, node: any) => {\n      try {\n        const id = String(node?.id ?? '');\n        if (!id.startsWith('c_')) return false;\n        while (ele.firstChild) ele.removeChild(ele.firstChild);\n        ele.classList.add('mm-content-node');\n        const div = document.createElement('div');\n        div.className = 'mm-content-text';\n        // Build content with optional checkbox prefix for task items\n        const topicText = String(node?.topic ?? '');\n        const metaAny = (node as any)?.data?.meta ?? (node as any)?.data?.data?.meta;\n        const isTask = !!(metaAny && metaAny.task);\n        const isDone = !!(metaAny && metaAny.done);\n        if (isTask) {\n          const box = document.createElement('input');\n          box.type = 'checkbox';\n          box.disabled = true;\n          box.checked = !!isDone;\n          box.style.margin = '0 6px 0 0';\n          ele.appendChild(box);\n        }\n        div.textContent = topicText;\n        div.style.display = 'inline-block';\n        (div.style as any).whiteSpace = 'normal';\n        (div.style as any).wordBreak = 'break-word';\n        (div.style as any).overflowWrap = 'anywhere';\n        (div.style as any).textOverflow = 'clip';\n        (div.style as any).overflow = 'visible';\n        (div.style as any).boxSizing = 'border-box';\n        (div.style as any).lineHeight = '1.5';\n        (div.style as any).textAlign = 'left';\n        (div.style as any).paddingLeft = '0px';\n        (div.style as any).paddingRight = '0px';\n        // Prefer content actual width; cap at 360px\n        const MAX_W = 360;\n        // Create a hidden measuring element to avoid 0-size before layout\n        let measuredW = 0;\n        try {\n          const cs = window.getComputedStyle(ele);\n          const meas = document.createElement('div');\n          meas.textContent = div.textContent || '';\n          meas.style.position = 'absolute';\n          meas.style.left = '-10000px';\n          meas.style.top = '-10000px';\n          meas.style.visibility = 'hidden';\n          meas.style.display = 'inline-block';\n          (meas.style as any).whiteSpace = 'normal';\n          (meas.style as any).wordBreak = 'break-word';\n          (meas.style as any).overflowWrap = 'anywhere';\n          (meas.style as any).textOverflow = 'clip';\n          (meas.style as any).overflow = 'visible';\n          (meas.style as any).boxSizing = 'border-box';\n          (meas.style as any).textAlign = 'left';\n          \n          // inherit font to match actual render width\n          (meas.style as any).font = cs.font || \"300 1em/1.5 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', 'sans'\";\n          (meas.style as any).fontSize = cs.fontSize || '16px';\n          document.body.appendChild(meas);\n          (meas.style as any).lineHeight = (div.style as any).lineHeight || cs.lineHeight || '1.5';\n          \n          (meas.style as any).fontWeight = (div.style as any).fontWeight || cs.fontWeight || 'normal' ;\n          (meas.style as any).paddingLeft = (div.style as any).paddingLeft || cs.paddingLeft || '3px';\n          (meas.style as any).paddingRight = (div.style as any).paddingRight || cs.paddingRight || '3px';\n          (meas.style as any).marginLeft = (div.style as any).marginLeft || cs.marginLeft;\n          (meas.style as any).marginRight = (div.style as any).marginRight || cs.marginRight;\n          measuredW = Math.ceil(meas.scrollWidth);\n          try { document.body.removeChild(meas); } catch {}\n        } catch {}\n        // Append first, then set final width/height based on measured width\n        ele.appendChild(div);\n        try {\n          // Add a small bias to account for subpixel/font rounding and checkbox\n          let bias = 6; // px\n          if (isTask) {\n            bias += 20;\n          }\n          const finalW = Math.min(Math.max(measuredW + bias, 10), MAX_W);\n          (div.style as any).width = `${finalW}px`;\n          const measuredH = Math.ceil(div.scrollHeight);\n          (div.style as any).height = `${measuredH}px`;\n        } catch {}\n        return true;\n      } catch {}\n      return false;\n    };\n\n    this.jm = new window.jsMind(options);\n    // Wrap center_root so plugin can decide whether to allow auto-centering root\n    this.wrapCenterRootIfNeeded();\n    // By default,\u7981\u6B62\u5C45\u4E2D\u6839\u8282\u70B9\uFF08\u4F8B\u5982\u9996\u6B21 show \u6216 refresh \u65F6\uFF09\n    this.allowCenterRoot = false;\n    this.jm.show(mind);\n    // Rebind controllers to the current jsMind instance and file after rebuild\n    try {\n      this.popup.jm = this.jm;\n      this.buttons.jm = this.jm;\n      this.exporter.jm = this.jm;\n      this.popup.file = this.file;\n      this.buttons.file = this.file;\n      this.exporter.file = this.file;\n    } catch {}\n    // Re-inject themes CSS after render to ensure it is last in head\n    try { ensureThemeCssInjected(document); } catch {}\n    // Inject override CSS again so it stays after theme CSS\n    try { this.injectContentNodeOverrideCss(); } catch {}\n    // Restore previous viewport transform and reselect without centering\n    this.restoreViewport(this.prevViewport);\n    if (prevSelectedId) {\n      try {\n        this.jm.select_node(prevSelectedId);\n      } finally {}\n    }\n    try { this.jm.expand_all && this.jm.expand_all(); } catch {}\n    // Apply persisted collapsed states for current file after expand_all\n    try {\n      const path = this.file?.path ?? '';\n      const collapsedSet = (this.plugin as any).getCollapsedSet?.(path) as Set<string> | undefined;\n      if (collapsedSet && collapsedSet.size > 0) {\n        for (const key of collapsedSet) {\n          const id = this.stableKeyToId.get(key);\n          if (!id) continue;\n          try { this.jm.collapse_node && this.jm.collapse_node(id); } catch {}\n        }\n      }\n    } catch {}\n    try { this.jm.resize && this.jm.resize(); } catch {}\n    // Ensure screenshot plugin options carry correct filename base after file switch\n    try {\n      if ((this.jm as any).screenshot && (this.jm as any).screenshot.options && this.file?.name) {\n        const base = (this.file.name || '').replace(/\\.[^.]+$/,'');\n        (this.jm as any).screenshot.options.filename = base;\n      }\n    } catch {}\n    try { ensureThemeCssInjected(document); } catch {}\n    try { this.injectContentNodeOverrideCss(); } catch {}\n\n    // Sync: click/select a node -> reveal and select heading in markdown editor\n    try {\n      const attachSelectionSync = () => {\n        if (this.jm && typeof this.jm.add_event_listener === 'function') {\n          this.jm.add_event_listener((type: any, data: any) => {\n            const evt = this.getJsMindEventName(type, data);\n            const nodeIdFromEvent = this.getEventNodeId(data);\n            if (evt === 'select_node' && nodeIdFromEvent) {\n              // Ignore programmatic select_node; only explicit mouse clicks (below) enter preview and reveal\n              return;\n            }\n            // Some builds of jsMind emit 'edit' on inline rename; also try 'update_node' as fallback\n            if ((evt === 'edit' || evt === 'update_node' || evt === 'nodechanged' || evt === 'topic_change' || evt === 'textedit') && nodeIdFromEvent) {\n              if (this.isContentNode(nodeIdFromEvent)) return;\n              // Only allow mindmap->markdown rename when mindmap is the active leaf\n              if (!this.isActiveLeafMindmapView()) return;\n              // Only treat as a rename when inline editing is active inside jsMind\n              if (!this.isMindmapEditingActive()) return;\n              const nodeId = nodeIdFromEvent;\n              const newTitle: string = this.getEventNodeTopic(data).toString();\n              this.renameHeadingInFile(nodeId, newTitle).catch(() => {});\n            }\n            if (evt === 'select_clear') {\n              this.enterScroll();\n              this.hideAddButton();\n            }\n            // Persist collapse / expand state per file using stable key\n            if (nodeIdFromEvent) {\n              if (this.isContentNode(nodeIdFromEvent)) return;\n              const key = this.idToStableKey.get(nodeIdFromEvent);\n              if (key) {\n                if (evt === 'collapse_node' || evt === 'collapse') {\n                  try { (this.plugin as any).markCollapsed?.(this.file?.path ?? '', key); } catch {}\n                }\n                if (evt === 'expand_node' || evt === 'expand') {\n                  try { (this.plugin as any).unmarkCollapsed?.(this.file?.path ?? '', key); } catch {}\n                }\n              }\n            }\n          });\n        }\n        if (this.containerElDiv) {\n          const nodesContainer = this.containerElDiv.querySelector('jmnodes') || this.containerElDiv;\n          const handler = (ev: Event) => {\n            // Only allow mindmap->markdown click reveal when this view is active\n            if (!this.isActiveLeafMindmapView()) return;\n            const t = ev.target as HTMLElement;\n            const nodeEl = t && (t.closest ? t.closest('jmnode') : null);\n            const nodeId = nodeEl?.getAttribute('nodeid') || '';\n            if (nodeId) {\n              if (this.isMindmapEditingActive()) return;\n              this.enterPreview();\n              // Debounce click similarly to not interfere double-click\n              if (this.revealTimeoutId != null) window.clearTimeout(this.revealTimeoutId);\n              this.revealTimeoutId = window.setTimeout(() => {\n                // if a dblclick just happened, skip\n                if (Date.now() - this.lastDblClickAtMs < 350) return;\n                // In preview, reveal and focus editor to show selection, but FSM stays in 'preview'\n                // If it's a content node, do not reveal markdown selection\n                if (this.isContentNode(nodeId)) {\n                  this.hideAddButton();\n                } else {\n                  const targetId = this.resolveHeadingId(nodeId);\n                  if (targetId) {\n                    this.revealHeadingById(targetId, { focusEditor: true, activateLeaf: true });\n                    if (targetId === nodeId) this.showAddButton(targetId); else this.hideAddButton();\n                    this.lastSyncedNodeId = targetId;\n                  }\n                }\n                this.revealTimeoutId = null;\n              }, 200);\n            }\n          };\n          // Hover popup: show immediate body on jmnode hover\n          const overHandler = (ev: MouseEvent) => {\n            if (!(this.plugin as any).settings?.enablePopup) return;\n            const t = ev.target as HTMLElement;\n            const nodeEl = t && (t.closest ? t.closest('jmnode') : null);\n            const nodeId = nodeEl?.getAttribute('nodeid') || '';\n            if (!nodeId) return;\n            if (this.isMindmapEditingActive()) return;\n            // Cancel pending hide when entering another node quickly\n            if (this.popup.hoverHideTimeoutId != null) {\n              try { window.clearTimeout(this.popup.hoverHideTimeoutId); } catch {}\n              this.popup.hoverHideTimeoutId = null;\n            }\n            this.showHoverPopup(nodeId);\n          };\n          const outHandler = (ev: MouseEvent) => {\n            if (!(this.plugin as any).settings?.enablePopup) return;\n            const t = ev.target as HTMLElement;\n            const nodeEl = t && (t.closest ? t.closest('jmnode') : null);\n            if (!nodeEl) return;\n            const rel = ev.relatedTarget as HTMLElement | null;\n            // If moving into the popup, do not hide\n            if (rel && this.popup.hoverPopupEl && (rel === this.popup.hoverPopupEl || this.popup.hoverPopupEl.contains(rel))) return;\n            if (rel && (rel === nodeEl || nodeEl.contains(rel))) return;\n            // Gap tolerance: delay hide to allow cursor to cross gap into popup or next node\n            if (this.popup.hoverHideTimeoutId != null) { try { window.clearTimeout(this.popup.hoverHideTimeoutId); } catch {} }\n            this.popup.hoverHideTimeoutId = window.setTimeout(() => {\n              this.popup.hoverHideTimeoutId = null;\n              // If mouse is now over popup, keep it\n              if (this.popup.hoverPopupEl && this.popup.hoverPopupEl.matches(':hover')) return;\n              this.hideHoverPopup();\n            }, 180);\n          };\n          nodesContainer.addEventListener('click', handler);\n          // Click on blank area -> scroll state\n          const blankHandler = (ev: MouseEvent) => {\n            const t = ev.target as HTMLElement;\n            const isNode = !!(t && (t.closest ? t.closest('jmnode') : null));\n            if (!isNode) this.forceEnterScroll();\n          };\n          nodesContainer.addEventListener('mousedown', blankHandler as any, true);\n          if ((this.plugin as any).settings?.enablePopup) {\n            nodesContainer.addEventListener('mouseover', overHandler as any);\n            nodesContainer.addEventListener('mouseout', outHandler as any);\n          }\n          const dblHandler = (_ev: Event) => {\n            this.lastDblClickAtMs = Date.now();\n            if (this.revealTimeoutId != null) {\n              window.clearTimeout(this.revealTimeoutId);\n              this.revealTimeoutId = null;\n            }\n            // Allow jsMind to enter edit mode without stealing focus to editor\n          };\n          nodesContainer.addEventListener('dblclick', dblHandler);\n          this.register(() => nodesContainer && nodesContainer.removeEventListener('click', handler as any));\n          if ((this.plugin as any).settings?.enablePopup) {\n            this.register(() => nodesContainer && nodesContainer.removeEventListener('mouseover', overHandler as any));\n            this.register(() => nodesContainer && nodesContainer.removeEventListener('mouseout', outHandler as any));\n          }\n          this.register(() => nodesContainer && nodesContainer.removeEventListener('dblclick', dblHandler as any));\n        }\n      };\n      attachSelectionSync();\n    } catch {}\n  }\n\n  private async softSyncFromDisk() {\n    if (this.isSuspended || !this.isViewVisible()) {\n      this.pendingDirty = true;\n      return;\n    }\n    if (!this.file || !this.jm) {\n      await this.refresh();\n      return;\n    }\n    try {\n      const content = await this.app.vault.read(this.file);\n      this.lastFileContent = content;\n      this.popup.lastFileContent = this.lastFileContent;\n      const nextHeadings = computeHeadingSections(content);\n      this.popup.headingsCache = nextHeadings;\n      await this.applyHeadingsDiff(this.headingsCache, nextHeadings);\n      this.headingsCache = nextHeadings;\n    } catch {\n      await this.refresh();\n    }\n  }\n\n  private async applyHeadingsDiff(prev: HeadingNode[], next: HeadingNode[]) {\n    if (!this.jm) return;\n    const prevMap = new Map(prev.map(h => [h.id, h] as const));\n    const nextMap = new Map(next.map(h => [h.id, h] as const));\n\n    // Determine root id used by current jm\n    const firstPrevH1 = prev.find(h => h.level === 1) ?? null;\n    const firstNextH1 = next.find(h => h.level === 1) ?? null;\n    const rootId = firstPrevH1 ? firstPrevH1.id : `virtual_root_${this.file?.name}`;\n\n    const getPrevDepth = (h: HeadingNode): number => {\n      let depth = 0;\n      let cur: HeadingNode | undefined = h;\n      while (cur && cur.parentId) {\n        depth += 1;\n        cur = prevMap.get(cur.parentId);\n      }\n      return depth;\n    };\n    // Remove nodes that no longer exist (deepest first) and only if present in jm\n    const toRemove = prev.filter(h => !nextMap.has(h.id)).sort((a, b) => getPrevDepth(b) - getPrevDepth(a));\n    for (const oldH of toRemove) {\n      try {\n        const exists = this.jm.get_node ? this.jm.get_node(oldH.id) : null;\n        if (exists) { try { this.jm.remove_node(oldH.id); } catch {} }\n      } catch {}\n    }\n\n    const getNextDepth = (h: HeadingNode): number => {\n      let depth = 0;\n      let cur: HeadingNode | undefined = h;\n      while (cur && cur.parentId) {\n        depth += 1;\n        cur = nextMap.get(cur.parentId);\n      }\n      return depth;\n    };\n    const resolveExistingParentId = (h: HeadingNode): string => {\n      // Ascend using next-map relations until finding an ancestor existing in jm\n      // If none found or parent is null (e.g., first H1), fall back to current jm rootId\n      let ancestorId: string | null = h.parentId ?? null;\n      let guard = 0;\n      while (ancestorId && guard++ < 100) {\n        try {\n          const exists = this.jm.get_node ? this.jm.get_node(ancestorId) : null;\n          if (exists) return ancestorId;\n        } catch {}\n        const ancestor = nextMap.get(ancestorId);\n        if (!ancestor) break;\n        ancestorId = ancestor.parentId ?? null;\n      }\n      return rootId;\n    };\n\n    // Add nodes (parents before children)\n    const toAdd = next.filter(h => !prevMap.has(h.id)).sort((a, b) => getNextDepth(a) - getNextDepth(b));\n    for (const newH of toAdd) {\n      const parentKey = resolveExistingParentId(newH);\n      try { this.jm.add_node(parentKey, newH.id, (newH.title && newH.title.trim()) ? newH.title : '\u65B0\u6807\u9898'); } catch {}\n    }\n\n    // Update titles and reparent existing nodes\n    for (const newH of next) {\n      const existed = prevMap.get(newH.id);\n      if (!existed) continue;\n      if (existed.title !== newH.title) {\n        try { this.jm.update_node(newH.id, (newH.title && newH.title.trim()) ? newH.title : '\u65B0\u6807\u9898'); } catch {}\n      }\n      const oldParent = existed.parentId ?? (firstPrevH1 ? firstPrevH1.id : rootId);\n      const newParentDesired = newH.parentId ?? (firstNextH1 ? firstNextH1.id : rootId);\n      if (oldParent !== newParentDesired) {\n        const parentKey = resolveExistingParentId(newH);\n        try {\n          const exists = this.jm.get_node ? this.jm.get_node(newH.id) : null;\n          if (exists) { try { this.jm.remove_node(newH.id); } catch {} }\n          try { this.jm.add_node(parentKey, newH.id, (newH.title && newH.title.trim()) ? newH.title : '\u65B0\u6807\u9898'); } catch {}\n        } catch {}\n      }\n    }\n\n    // Reselect previously selected node without centering\n    try {\n      const sel = this.jm.get_selected_node?.();\n      const selId = sel?.id;\n      if (selId && nextMap.has(selId)) {\n        try { this.jm.select_node(selId); } catch {}\n      }\n    } catch {}\n  }\n\n  private wrapCenterRootIfNeeded() {\n    try {\n      if (this.centerRootWrapped || !this.jm?.view) return;\n      const view: any = this.jm.view;\n      const originalCenterRoot = view.center_root?.bind(view);\n      const originalCenterNode = view.center_node?.bind(view);\n      if (!originalCenterRoot || !originalCenterNode) return;\n      const self = this;\n      view.center_root = function (...args: any[]) {\n        if (self.allowCenterRoot) {\n          try { return originalCenterRoot(...args); } catch {}\n        }\n        // otherwise no-op to preserve current viewport\n        return undefined;\n      };\n      view.center_node = function (node: any, ...rest: any[]) {\n        try {\n          const root = self.jm?.get_root?.();\n          const isRoot = root && node && node.id === root.id;\n          if (isRoot && !self.allowCenterRoot) {\n            return undefined;\n          }\n          return originalCenterNode(node, ...rest);\n        } catch {}\n        return undefined;\n      };\n      this.centerRootWrapped = true;\n    } catch {}\n  }\n\n  private captureViewport(): { nodesTransform: string | null; canvasTransform: string | null } | null {\n    try {\n      if (!this.containerElDiv) return null;\n      const nodes = this.containerElDiv.querySelector('jmnodes') as HTMLElement | null;\n      const canvas = this.containerElDiv.querySelector('canvas.jsmind') as HTMLElement | null;\n      const nodesTransform = nodes ? getComputedStyle(nodes).transform : null;\n      const canvasTransform = canvas ? getComputedStyle(canvas).transform : null;\n      return { nodesTransform, canvasTransform };\n    } catch {\n      return null;\n    }\n  }\n\n  private restoreViewport(prev: { nodesTransform: string | null; canvasTransform: string | null } | null) {\n    try {\n      if (!prev || !this.containerElDiv) return;\n      const nodes = this.containerElDiv.querySelector('jmnodes') as HTMLElement | null;\n      const canvas = this.containerElDiv.querySelector('canvas.jsmind') as HTMLElement | null;\n      if (nodes && prev.nodesTransform && prev.nodesTransform !== 'none') {\n        (nodes.style as any).transform = prev.nodesTransform;\n      }\n      if (canvas && prev.canvasTransform && prev.canvasTransform !== 'none') {\n        (canvas.style as any).transform = prev.canvasTransform as string;\n      }\n    } catch {}\n  }\n\n  private rebuildStableKeyIndex() {\n    try {\n      this.idToStableKey.clear();\n      this.stableKeyToId.clear();\n      // Build parent chain and sibling index per heading\n      const byId = new Map(this.headingsCache.map(h => [h.id, h] as const));\n      const childrenByParent = new Map<string | null, HeadingNode[]>();\n      for (const h of this.headingsCache) {\n        const p = h.parentId ?? null;\n        if (!childrenByParent.has(p)) childrenByParent.set(p, []);\n        childrenByParent.get(p)!.push(h);\n      }\n      // ensure siblings order is the original order in headingsCache\n      for (const [p, arr] of childrenByParent) {\n        arr.sort((a, b) => a.start - b.start);\n      }\n      const computeKey = (h: HeadingNode): string => {\n        const chain: number[] = [];\n        let cur: HeadingNode | null = h;\n        while (cur) {\n          const parent: HeadingNode | null = cur.parentId ? (byId.get(cur.parentId) as HeadingNode | undefined) ?? null : null;\n          const siblings = childrenByParent.get(cur.parentId ?? null) ?? [];\n          const idx = Math.max(0, siblings.findIndex(x => x.id === cur!.id));\n          chain.push(idx);\n        \tcur = parent;\n        }\n        chain.reverse();\n        return chain.join('.') || '0';\n      };\n      for (const h of this.headingsCache) {\n        const key = computeKey(h);\n        this.idToStableKey.set(h.id, key);\n        this.stableKeyToId.set(key, h.id);\n      }\n    } catch {}\n  }\n\n  private async revealHeadingById(nodeId: string, opts?: { focusEditor?: boolean; activateLeaf?: boolean }) {\n    if (!this.file) return;\n    try {\n      const focusEditor = opts?.focusEditor !== false;\n      const activateLeaf = opts?.activateLeaf !== false;\n      const content = await this.app.vault.read(this.file);\n      const headings = computeHeadingSections(content);\n      const target = headings.find(h => h.id === nodeId);\n      if (!target) return;\n      const lines = content.split('\\n');\n      const lineText = lines[target.lineStart] ?? '';\n      let chStart = 0;\n      if (target.style === 'atx') {\n        const m = lineText.match(/^(#{1,6})\\s+/);\n        chStart = m ? m[0].length : 0;\n      } else {\n        chStart = 0;\n      }\n      const chEnd = lineText.length;\n\n      // Prefer active markdown view if it matches the file\n      const activeMd = this.app.workspace.getActiveViewOfType(MarkdownView);\n      const from = { line: target.lineStart, ch: chStart } as any;\n      const to = { line: target.lineStart, ch: chEnd } as any;\n      if (activeMd?.file?.path === this.file.path) {\n        const editor = activeMd.editor;\n        try { if (activateLeaf) this.app.workspace.revealLeaf(activeMd.leaf); } catch {}\n        try { if (focusEditor) (editor as any).focus?.(); } catch {}\n        try { editor.setSelection(from, to); } catch {}\n        try { (editor as any).scrollIntoView({ from, to }, true); } catch {}\n        return;\n      }\n      // Otherwise, find the leaf that has this file\n      const mdLeaves = this.app.workspace.getLeavesOfType('markdown');\n      for (const leaf of mdLeaves) {\n        const v = leaf.view as any;\n        if (v?.file?.path === this.file.path) {\n          const mdView = v as MarkdownView;\n          const editor = mdView.editor;\n          try { if (activateLeaf) this.app.workspace.setActiveLeaf(leaf, { focus: !!focusEditor }); } catch {}\n          try { if (activateLeaf) this.app.workspace.revealLeaf(leaf); } catch {}\n          try { if (focusEditor) (editor as any).focus?.(); } catch {}\n          try { editor.setSelection(from, to); } catch {}\n          try { (editor as any).scrollIntoView({ from, to }, true); } catch {}\n          return;\n        }\n      }\n    } catch {}\n  }\n\n  private selectMindmapNodeById(nodeId: string, center: boolean) {\n    if (!this.jm) return;\n    try {\n      const targetId = this.resolveHeadingId(nodeId) || nodeId;\n      const node = this.jm.get_node ? this.jm.get_node(targetId) : null;\n      if (this.jm.select_node) this.jm.select_node(targetId);\n      // Only center in edit mode per FSM rule\n      const allowCenter = !!(center && node && this.shouldCenterOnMarkdownSelection());\n      if (allowCenter) {\n        // Defer centering until selection/layout settles\n        this.allowCenterRoot = true;\n        window.setTimeout(() => {\n          try { this.jm.center_node && this.jm.center_node(node); } catch {}\n          try { this.jm.view && this.jm.view.center_node && this.jm.view.center_node(node); } catch {}\n          // try { this.jm.resize && this.jm.resize(); } catch {}\n          // reset permission to avoid unintended future root centering\n          this.allowCenterRoot = false;\n        }, 30);\n      }\n    } catch {}\n  }\n\n  private ensureMindmapNodeVisible(nodeId: string) {\n    try {\n      if (!this.jm || !this.containerElDiv) return;\n      const node = this.jm.get_node ? this.jm.get_node(this.resolveHeadingId(nodeId) || nodeId) : null;\n      if (!node) return;\n      const actualId = this.resolveHeadingId(nodeId) || nodeId;\n      const nodeEl = this.containerElDiv.querySelector(`jmnode[nodeid=\"${actualId}\"]`) as HTMLElement | null;\n      if (!nodeEl) return;\n      const hostRect = this.containerElDiv.getBoundingClientRect();\n      const rect = nodeEl.getBoundingClientRect();\n      const margin = 8;\n      const fullyOffLeft = rect.right < hostRect.left + margin;\n      const fullyOffRight = rect.left > hostRect.right - margin;\n      const fullyOffTop = rect.bottom < hostRect.top + margin;\n      const fullyOffBottom = rect.top > hostRect.bottom - margin;\n      const fullyOffscreen = fullyOffLeft || fullyOffRight || fullyOffTop || fullyOffBottom;\n\n      // Gentle horizontal nudge if only partially clipped\n      let nudged = false;\n      const clippedLeft = rect.left < hostRect.left + margin;\n      const clippedRight = rect.right > hostRect.right - margin;\n      if (!fullyOffscreen && (clippedLeft || clippedRight)) {\n        const overflowLeft = clippedLeft ? (hostRect.left + margin - rect.left) : 0;\n        const overflowRight = clippedRight ? (rect.right - (hostRect.right - margin)) : 0;\n        const maxNudge = 60; // px\n        let deltaX = 0;\n        if (overflowRight > 0) deltaX += Math.min(overflowRight, maxNudge); // scroll right\n        if (overflowLeft > 0) deltaX -= Math.min(overflowLeft, maxNudge);   // scroll left\n        const el: any = this.containerElDiv;\n        if (typeof el.scrollLeft === 'number' && deltaX !== 0) {\n          try { el.scrollLeft += deltaX; nudged = true; } catch {}\n        }\n      }\n\n      // If fully offscreen, center the node to ensure visibility (original behavior)\n      if (!nudged && fullyOffscreen) {\n        this.allowCenterRoot = true;\n        try { this.jm.center_node && this.jm.center_node(node); } catch {}\n        try { this.jm.view && this.jm.view.center_node && this.jm.view.center_node(node); } catch {}\n        // try { this.jm.resize && this.jm.resize(); } catch {}\n        this.allowCenterRoot = false;\n      }\n    } catch {}\n  }\n\n  private attachEditorSync() {\n    const trySync = async () => {\n      if (!this.file) return;\n      // Only allow markdown->mindmap when active view is this file's markdown\n      if (!this.isActiveMarkdownForThisFile()) return;\n      const activeMd = this.app.workspace.getActiveViewOfType(MarkdownView);\n      if (!activeMd || activeMd.file?.path !== this.file.path) return;\n      const editor = activeMd.editor;\n      const cursor = editor.getCursor();\n      const content = editor.getValue();\n      const headings = computeHeadingSections(content);\n      if (headings.length === 0) return;\n      const currentLine = cursor.line;\n      let current: HeadingNode | null = null;\n      for (let i = 0; i < headings.length; i++) {\n        const h = headings[i];\n        const next = headings[i + 1];\n        const endLine = next ? next.lineStart - 1 : content.split('\\n').length - 1;\n        if (currentLine >= h.lineStart && currentLine <= endLine) {\n          current = h;\n        }\n      }\n      if (current && current.id !== this.lastSyncedNodeId) {\n        // Always record latest id to avoid repeated attempts\n        const center = this.shouldCenterOnMarkdownSelection();\n        const shouldSelectMindmap = this.shouldFollowScroll() || this.shouldCenterOnMarkdownSelection();\n        if (shouldSelectMindmap) {\n          this.selectMindmapNodeById(current.id, center);\n          this.lastSyncedNodeId = current.id;\n        }\n        if (this.shouldFollowScroll()) this.ensureMindmapNodeVisible(current.id);\n        // Do not show buttons when markdown drives selection\n        this.hideAddButton();\n      }\n    };\n\n    // Editor content change -> sync\n    this.registerEvent((this.app.workspace as any).on('editor-change', (editor: Editor, mdView?: MarkdownView) => {\n      if (!this.file) return;\n      // Only run when this file's markdown is the active view\n      if (!this.isActiveMarkdownForThisFile()) return;\n      if (mdView?.file?.path === this.file.path) {\n        trySync();\n      }\n    }));\n\n    // Reposition + button on container scroll (when scrollbars visible)\n    if (this.containerElDiv) {\n      const scrollHandler = () => this.buttons.updatePosition();\n      this.containerElDiv.addEventListener('scroll', scrollHandler);\n      this.register(() => this.containerElDiv && this.containerElDiv.removeEventListener('scroll', scrollHandler as any));\n    }\n\n    // Removed cursor-only polling to rely on scroll and explicit interactions\n\n    // Scroll-based top heading sync when enabled\n    const attachScrollSync = () => {\n      // Detach previous\n      try {\n        if (this.scrollSyncEl && this.scrollSyncHandler) {\n          this.scrollSyncEl.removeEventListener('scroll', this.scrollSyncHandler);\n        }\n      } catch {}\n      const activeMd = this.app.workspace.getActiveViewOfType(MarkdownView);\n      if (!this.isActiveMarkdownForThisFile()) return;\n      if (!activeMd) return;\n      const scroller = (activeMd as any).contentEl?.querySelector?.('.cm-scroller');\n      if (!scroller) return;\n      // Enter edit when the user clicks inside the editor area, and sync selection after click\n      try {\n        const cmRoot = (activeMd as any).contentEl?.querySelector?.('.cm-editor');\n        if (cmRoot) {\n          const onEditMouseDown = () => {\n            this.enterEdit();\n          };\n          const onEditMouseUp = () => {\n            const run = () => { try { /* sync mindmap to current cursor */ (trySync as any)(); } catch {} };\n            if (typeof window.requestAnimationFrame === 'function') window.requestAnimationFrame(run); else setTimeout(run, 0);\n          };\n          cmRoot.addEventListener('mousedown', onEditMouseDown as any, true);\n          cmRoot.addEventListener('mouseup', onEditMouseUp as any, true);\n          this.register(() => {\n            try { cmRoot.removeEventListener('mousedown', onEditMouseDown, true); } catch {}\n            try { cmRoot.removeEventListener('mouseup', onEditMouseUp, true); } catch {}\n          });\n        }\n      } catch {}\n      const scheduleRun = () => {\n        const run = () => {\n          try {\n            if (!this.isAutoFollowEnabled()) return;\n            if (!this.file || activeMd.file?.path !== this.file.path) return;\n            const editor = activeMd.editor as any;\n            const content = editor.getValue();\n            const headings = computeHeadingSections(content);\n            if (headings.length === 0) return;\n            let best: HeadingNode | null = null;\n            const cmAny = editor?.cm;\n            const scRect = (scroller as HTMLElement).getBoundingClientRect();\n            // Prefer CM6 EditorView directly when available\n            if (cmAny) {\n              let posRes: any = null;\n              if (typeof cmAny.posAtCoords === 'function') {\n                posRes = cmAny.posAtCoords({ x: scRect.left + 16, y: scRect.top + 1 });\n              } else if (cmAny.view && typeof cmAny.view.posAtCoords === 'function') {\n                posRes = cmAny.view.posAtCoords({ x: scRect.left + 16, y: scRect.top + 1 });\n              }\n              const pos = typeof posRes === 'number' ? posRes : (posRes && typeof posRes.pos === 'number' ? posRes.pos : null);\n              const doc = cmAny?.state?.doc ?? cmAny?.view?.state?.doc;\n              if (pos != null && doc?.lineAt) {\n                try {\n                  const lineNo = doc.lineAt(pos).number - 1;\n                  for (const h of headings) { if (h.lineStart >= lineNo) { best = h; break; } }\n                } catch {}\n              }\n            }\n            if (!best) {\n              const cm5 = cmAny;\n              if (cm5?.coordsChar) {\n                const p = cm5.coordsChar({ left: scRect.left + 16, top: scRect.top + 1 }, 'window');\n                if (p && typeof p.line === 'number') {\n                  for (const h of headings) { if (h.lineStart >= p.line) { best = h; break; } }\n                }\n              }\n            }\n            if (best && best.id !== this.lastSyncedNodeId) {\n              const center = false;\n              if (this.shouldFollowScroll()) {\n                this.selectMindmapNodeById(best.id, center);\n                this.ensureMindmapNodeVisible(best.id);\n                this.lastSyncedNodeId = best.id;\n              }\n            }\n          } catch {}\n        };\n        if (typeof window.requestAnimationFrame === 'function') {\n          window.requestAnimationFrame(run);\n        } else {\n          setTimeout(run, 50);\n        }\n      };\n      const onScroll = () => {\n        // if (!this.isActiveMarkdownForThisFile()) return;\n        if (!this.isAutoFollowEnabled()) return;\n        if (!this.file || activeMd.file?.path !== this.file.path) return;\n        // Enter scroll mode on user scroll\n        this.enterScroll();\n        const now = Date.now();\n        const elapsed = now - this.scrollSyncLastRunMs;\n        const threshold = 200;\n        if (elapsed >= threshold) {\n          this.scrollSyncLastRunMs = now;\n          scheduleRun();\n        } else {\n          if (this.scrollSyncPendingTimeoutId == null) {\n            const delay = threshold - elapsed;\n            this.scrollSyncPendingTimeoutId = window.setTimeout(() => {\n              this.scrollSyncPendingTimeoutId = null;\n              this.scrollSyncLastRunMs = Date.now();\n              scheduleRun();\n            }, delay);\n            // Ensure timer is cleared on detach\n            this.register(() => {\n              if (this.scrollSyncPendingTimeoutId != null) {\n                try { window.clearTimeout(this.scrollSyncPendingTimeoutId); } catch {}\n                this.scrollSyncPendingTimeoutId = null;\n              }\n            });\n          }\n        }\n      };\n      scroller.addEventListener('scroll', onScroll);\n      this.scrollSyncEl = scroller as HTMLElement;\n      this.scrollSyncHandler = onScroll;\n      this.register(() => scroller && scroller.removeEventListener('scroll', onScroll as any));\n    };\n    attachScrollSync();\n  }\n\n  private showAddButton(nodeId: string) {\n    this.buttons.show(nodeId);\n  }\n\n  private hideAddButton() {\n    this.buttons.hide();\n  }\n\n  private async addChildUnder(nodeId: string) {\n    await this.buttons.addChildUnder(nodeId);\n  }\n\n  // moved into tools\n\n  // moved into tools\n\n  // moved into tools\n\n  // moved into tools\n\n  private showHoverPopup(nodeId: string) {\n    this.popup.show(nodeId);\n  }\n\n  private hideHoverPopup() {\n    this.popup.hide();\n  }\n\n  private async deleteHeadingById(nodeId: string) {\n    if (!this.file) return;\n    try {\n      const content = await this.app.vault.read(this.file);\n      const headings = computeHeadingSections(content);\n      const target = headings.find(h => h.id === nodeId);\n      if (!target) return;\n      const start = target.start;\n      const end = Math.min(target.end + 1, content.length);\n      const updated = content.slice(0, start) + content.slice(end);\n      await this.app.vault.modify(this.file, updated);\n      new Notice('Node deleted');\n      // After deletion, try to show buttons on parent if exists\n      const newHeadings = computeHeadingSections(updated);\n      const parentId = target.parentId;\n      if (parentId && newHeadings.find(h => h.id === parentId)) {\n        this.showAddButton(parentId);\n      } else {\n        this.hideAddButton();\n      }\n    } catch {}\n  }\n\n  private async renameHeadingInFile(nodeId: string, nextTitleRaw: string) {\n    if (!this.file) return;\n    const safeTitle = (nextTitleRaw && nextTitleRaw.trim()) ? nextTitleRaw.trim() : '\u65B0\u6807\u9898';\n    try {\n      const content = await this.app.vault.read(this.file);\n      const lines = content.split('\\n');\n      const headings = computeHeadingSections(content);\n      const target = headings.find(h => h.id === nodeId);\n      if (!target) return;\n      const lineIdx = target.lineStart;\n      if (lineIdx < 0 || lineIdx >= lines.length) return;\n      let nextLine = lines[lineIdx];\n      if (target.style === 'atx') {\n        const original = lines[lineIdx] ?? '';\n        // Preserve leading hashes, whitespace, and any trailing spaces/closing #s\n        const m = original.match(/^(#{1,6})([ \\t]+)(.*?)([ \\t#]*)$/);\n        if (m) {\n          const leading = m[1] + m[2];\n          const trailing = m[4] ?? '';\n          nextLine = `${leading}${safeTitle}${trailing}`;\n        } else {\n          // Fallback: rebuild minimally\n          const hashes = '#'.repeat(Math.min(Math.max(target.level, 1), 6));\n          nextLine = `${hashes} ${safeTitle}`;\n        }\n      } else {\n        // setext: change only the title line; underline remains\n        nextLine = safeTitle;\n      }\n      // Skip write if no change\n      if (lines[lineIdx] === nextLine) return;\n      lines[lineIdx] = nextLine;\n      const updated = lines.join('\\n');\n      await this.app.vault.modify(this.file, updated);\n      // ensure jsMind node shows placeholder if needed\n      if (this.jm && nextTitleRaw.trim().length === 0) {\n        try { this.jm.update_node(nodeId, safeTitle); } catch {}\n      }\n    } catch {\n      // ignore\n    }\n  }\n\n\n  private isMarkdownEditorFocused(mdView: MarkdownView): boolean {\n    try {\n      const active = document.activeElement as HTMLElement | null;\n      if (!active) return false;\n      const cmEl = (mdView as any).contentEl?.querySelector?.('.cm-editor');\n      if (!cmEl) return false;\n      return !!(active === cmEl || active.closest?.('.cm-editor') === cmEl);\n    } catch {}\n    return false;\n  }\n\n  private isActiveLeafMindmapView(): boolean {\n    try {\n      const activeLeaf = (this.app.workspace as any).activeLeaf;\n      return !!(activeLeaf && activeLeaf.view === this);\n    } catch {}\n    return false;\n  }\n\n  private isActiveMarkdownForThisFile(): boolean {\n    try {\n      const mv = this.app.workspace.getActiveViewOfType(MarkdownView);\n      if (!mv) return false;\n      return !!(mv.file && this.file && mv.file.path === this.file.path);\n    } catch {}\n    return false;\n  }\n\n  private isAutoFollowEnabled(): boolean {\n    try {\n      return (this.plugin as any).settings?.autoFollow === true;\n    } catch {}\n    return false;\n  }\n\n  private injectContentNodeOverrideCss() {\n    try {\n      const id = 'obsidian-jsmind-content-node-override';\n      let el = document.getElementById(id) as HTMLStyleElement | null;\n      const css = `\n        /* Increase specificity over: body:not(.theme-dark) jmnodes.theme-obsidian jmnode */\n        body:not(.theme-dark) jmnodes.theme-obsidian jmnode.mm-content-node,\n        body.theme-dark jmnodes.theme-obsidian jmnode.mm-content-node,\n        jmnodes.theme-obsidian jmnode.mm-content-node {\n          background: transparent !important;\n          background-color: transparent !important;\n          box-shadow: none !important;\n          border: none !important;\n          border-radius: 0 !important;\n          padding-bottom: 1.5px !important;\n          border-bottom: 1.5px solid var(--background-modifier-border) !important;\n          /* Multiline wrapping while keeping layout stable */\n          white-space: normal !important;\n          word-break: break-word !important;\n          overflow-wrap: anywhere !important;\n          text-overflow: clip !important;\n          overflow: visible !important;\n          display: inline-block !important;\n          box-sizing: border-box !important;\n          /* do not constrain outer node width to characters; inner div controls width */\n          line-height: 1.5 !important;\n          text-align: left !important;\n          font: 300 1em/1.5 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', 'sans';\n        }\n        /* Override overflow-hidden mode to still wrap content nodes */\n        .jmnode-overflow-hidden jmnode.mm-content-node {\n          white-space: normal !important;\n          overflow: visible !important;\n          text-overflow: clip !important;\n          font: 300 1em/1.5 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', 'sans';\n        }\n        /* Preserve selected background for content nodes */\n        body:not(.theme-dark) jmnodes.theme-obsidian jmnode.mm-content-node.selected,\n        body.theme-dark jmnodes.theme-obsidian jmnode.mm-content-node.selected,\n        jmnodes.theme-obsidian jmnode.mm-content-node.selected {\n          background: var(--interactive-accent) !important;\n          background-color: var(--interactive-accent) !important;\n          color: var(--text-on-accent) !important;\n          font: 300 1em/1.5 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', 'sans';\n        }\n        jmnode.mm-content-node textarea {\n          border: none !important;\n          box-shadow: none !important;\n          border-radius: 0 !important;\n          padding: 0 !important;\n          margin-left: -2px !important;\n          margin-right: -2px !important;\n          line-height: 1.5 !important;\n          text-align: left !important;\n          min-height: 1.5em !important;\n          display: block !important;\n          box-sizing: border-box !important;\n          font: 300 1em/1.5 'PingFang SC', 'Lantinghei SC', 'Microsoft Yahei', 'Hiragino Sans GB', 'Microsoft Sans Serif', 'WenQuanYi Micro Hei', 'sans';\n        }\n      `;\n      if (!el) {\n        el = document.createElement('style');\n        el.id = id;\n        el.textContent = css;\n        document.head.appendChild(el);\n      } else {\n        el.textContent = css;\n      }\n    } catch {}\n  }\n\n  \n\n\n}\n\nexport default class MindmapPlugin extends Plugin {\n  private collapsedByFile: Record<string, string[]> = {};\n  public settings: { autoFollow: boolean; theme: ThemeName; enablePopup: boolean; includeContent?: boolean } = { autoFollow: true, theme: 'default', enablePopup: true, includeContent: false };\n\n  async onload() {\n    // Minimal logic change (Option B): sanitize class tokens with whitespace\n    // to avoid InvalidCharacterError when other plugins add class names with spaces.\n    try {\n      const g: any = window as any;\n      if (!g.__jsmindMindmapPatchedClassListAdd) {\n        const proto: any = (DOMTokenList as any).prototype;\n        const originalAdd = proto.add;\n        proto.add = function (...tokens: any[]) {\n          const sanitized = tokens.map((token: any) =>\n            typeof token === 'string' ? token.replace(/\\s+/g, '-') : token\n          );\n          return originalAdd.apply(this, sanitized);\n        };\n        g.__jsmindMindmapPatchedClassListAdd = true;\n      }\n    } catch (e) {\n      // noop\n    }\n\n    // Load settings and persisted collapsed map\n    try {\n      const data = (await this.loadData()) as any;\n      if (data && typeof data === 'object') {\n        if (typeof data.autoFollow === 'boolean') this.settings.autoFollow = data.autoFollow;\n        if (data.theme) (this.settings as any).theme = data.theme as ThemeName;\n        if (typeof data.enablePopup === 'boolean') (this.settings as any).enablePopup = data.enablePopup;\n        if (typeof data.includeContent === 'boolean') (this.settings as any).includeContent = data.includeContent;\n      }\n      if (data && typeof data === 'object' && data.collapsedByFile) {\n        const raw = data.collapsedByFile as Record<string, string[]>;\n        const cleaned: Record<string, string[]> = {};\n        for (const [fp, arr] of Object.entries(raw)) {\n          if (Array.isArray(arr)) {\n            const uniq = Array.from(new Set(arr.filter(v => typeof v === 'string' && v.length > 0)));\n            if (uniq.length > 0) cleaned[fp] = uniq;\n          }\n        }\n        this.collapsedByFile = cleaned;\n      }\n    } catch {}\n\n    this.registerView(\n      VIEW_TYPE_MINDMAP,\n      (leaf) => new MindmapView(leaf, this)\n    );\n\n    this.addCommand({\n      id: 'open-jsmind-preview',\n      name: 'Preview current markdown as mindmap',\n      callback: async () => {\n        const file = this.app.workspace.getActiveFile();\n        if (!file) {\n          new Notice('No active file');\n          return;\n        }\n        const leaf = this.app.workspace.getRightLeaf(false);\n        if (!leaf) return;\n        await leaf.setViewState({ type: VIEW_TYPE_MINDMAP, active: true });\n        const view = leaf.view as MindmapView;\n        await view.setFile(file);\n        this.app.workspace.revealLeaf(leaf);\n      },\n    });\n\n    // Resize handling\n    this.registerDomEvent(window, 'resize', () => {\n      const leaves = this.app.workspace.getLeavesOfType(VIEW_TYPE_MINDMAP);\n      for (const leaf of leaves) {\n        const view = leaf.view as MindmapView;\n        (view as any).jm && (view as any).jm.resize && (view as any).jm.resize();\n      }\n    });\n\n    // Settings tab\n    this.addSettingTab(new MindmapSettingTab(this.app, this));\n  }\n\n  onunload() {\n    this.app.workspace.getLeavesOfType(VIEW_TYPE_MINDMAP).forEach(leaf => leaf.detach());\n  }\n\n  getCollapsedSet(filePath: string): Set<string> {\n    const arr = this.collapsedByFile[filePath] || [];\n    return new Set(arr);\n  }\n\n  async markCollapsed(filePath: string, nodeId: string) {\n    const set = this.getCollapsedSet(filePath);\n    set.add(nodeId);\n    if (set.size > 0) {\n      this.collapsedByFile[filePath] = Array.from(set);\n    } else {\n      delete this.collapsedByFile[filePath];\n    }\n    await this.saveData({ collapsedByFile: this.collapsedByFile, autoFollow: this.settings.autoFollow });\n  }\n\n  async unmarkCollapsed(filePath: string, nodeId: string) {\n    const set = this.getCollapsedSet(filePath);\n    set.delete(nodeId);\n    if (set.size > 0) {\n      this.collapsedByFile[filePath] = Array.from(set);\n    } else {\n      delete this.collapsedByFile[filePath];\n    }\n    await this.saveData({ collapsedByFile: this.collapsedByFile, autoFollow: this.settings.autoFollow });\n  }\n}\n\nclass MindmapSettingTab extends PluginSettingTab {\n  plugin: MindmapPlugin;\n  constructor(app: App, plugin: MindmapPlugin) {\n    super(app, plugin);\n    this.plugin = plugin;\n  }\n  display(): void {\n    const { containerEl } = this;\n    containerEl.empty();\n    containerEl.createEl('h3', { text: 'Mindmap (jsMind) Settings' });\n    new Setting(containerEl)\n      .setName('Auto follow editor scroll')\n      .setDesc('When scrolling markdown, select the top heading in mindmap')\n      .addToggle(t => t\n        .setValue(this.plugin.settings.autoFollow)\n        .onChange(async (v) => {\n          this.plugin.settings.autoFollow = v;\n          await this.plugin.saveData({ collapsedByFile: this.plugin.collapsedByFile, autoFollow: this.plugin.settings.autoFollow, theme: this.plugin.settings.theme, enablePopup: this.plugin.settings.enablePopup });\n        }));\n\n    // Theme selector\n    new Setting(containerEl)\n      .setName('Theme')\n      .setDesc('Choose node background theme (supports light/dark)')\n      .addDropdown((dd) => {\n        for (const opt of THEME_OPTIONS) {\n          dd.addOption(opt.key, opt.label);\n        }\n        dd.setValue(this.plugin.settings.theme);\n        dd.onChange(async (val) => {\n          this.plugin.settings.theme = (val as any);\n          await this.plugin.saveData({ collapsedByFile: this.plugin.collapsedByFile, autoFollow: this.plugin.settings.autoFollow, theme: this.plugin.settings.theme, enablePopup: this.plugin.settings.enablePopup });\n          try {\n            // Refresh all open mindmap views to apply theme immediately\n            const leaves = this.app.workspace.getLeavesOfType('obsidian-jsmind-mindmap-view');\n            for (const leaf of leaves) {\n              const view = leaf.view as any;\n              await view.refresh?.();\n            }\n          } catch {}\n        });\n      });\n\n    // Hover popup toggle\n    new Setting(containerEl)\n      .setName('Show hover popup')\n      .setDesc('Show a Markdown preview popup when hovering a mindmap node')\n      .addToggle(t => t\n        .setValue(this.plugin.settings.enablePopup)\n        .onChange(async (v) => {\n          this.plugin.settings.enablePopup = v;\n          await this.plugin.saveData({ collapsedByFile: this.plugin.collapsedByFile, autoFollow: this.plugin.settings.autoFollow, theme: this.plugin.settings.theme, enablePopup: this.plugin.settings.enablePopup, includeContent: this.plugin.settings.includeContent });\n          try {\n            // Hide popup immediately if turned off and rebind listeners via refresh\n            const leaves = this.app.workspace.getLeavesOfType('obsidian-jsmind-mindmap-view');\n            for (const leaf of leaves) {\n              const view = leaf.view as any;\n              view.hideHoverPopup?.();\n              await view.refresh?.();\n            }\n          } catch {}\n        }));\n\n    // Include content toggle (settings)\n    new Setting(containerEl)\n      .setName('Include content lists')\n      .setDesc('Add ul/ol list items as content nodes under headings')\n      .addToggle(t => t\n        .setValue(!!this.plugin.settings.includeContent)\n        .onChange(async (v) => {\n          this.plugin.settings.includeContent = v;\n          await this.plugin.saveData({ collapsedByFile: this.plugin.collapsedByFile, autoFollow: this.plugin.settings.autoFollow, theme: this.plugin.settings.theme, enablePopup: this.plugin.settings.enablePopup, includeContent: this.plugin.settings.includeContent });\n          try {\n            const leaves = this.app.workspace.getLeavesOfType('obsidian-jsmind-mindmap-view');\n            for (const leaf of leaves) {\n              const view = leaf.view as any;\n              await view.refresh?.();\n            }\n          } catch {}\n        }));\n  }\n}\n\n\n", "import { MarkdownRenderer, MarkdownView, Notice, TFile } from 'obsidian';\n\nexport class PopupController {\n  containerElDiv: HTMLDivElement | null = null;\n  jm: any | null = null;\n  app: any;\n  plugin: any;\n  file: TFile | null = null;\n  shouldMindmapDriveMarkdown: () => boolean = () => false;\n  isMindmapEditingActive: () => boolean = () => false;\n  hoverPopupEl: HTMLDivElement | null = null;\n  hoverPopupForNodeId: string | null = null;\n  hoverPopupRAF: number | null = null;\n  hoverHideTimeoutId: number | null = null;\n  lastFileContent: string = '';\n  headingsCache?: any[];\n  computeHeadingSections: (text: string) => any[] = () => [];\n\n  show(nodeId: string) {\n    try {\n      if (!(this.plugin as any)?.settings?.enablePopup) { this.hide(); return; }\n      if (!this.containerElDiv) return;\n      if (this.isMindmapEditingActive()) return;\n      const body = this.extractNodeImmediateBody(nodeId);\n      if (!body || body.trim().length === 0) { this.hide(); return; }\n      let el = this.hoverPopupEl;\n      if (!el) {\n        el = document.createElement('div');\n        try { el.classList.add('mm-popup'); } catch {}\n        el.style.position = 'absolute';\n        el.style.zIndex = '6';\n        el.style.minWidth = '220px';\n        el.style.maxWidth = '420px';\n        el.style.maxHeight = '240px';\n        el.style.overflow = 'auto';\n        el.style.padding = '4px 6px';\n        el.style.borderRadius = '6px';\n        el.style.boxShadow = '0 8px 24px rgba(0,0,0,0.25)';\n        {\n          const isDark = document.body.classList.contains('theme-dark');\n          el.style.setProperty('border', isDark ? '1px solid rgba(255,255,255,0.18)' : '1px solid rgba(0,0,0,0.12)', 'important');\n          el.style.setProperty('background', isDark ? 'rgba(30,30,30,0.68)' : 'rgba(255,255,255,0.85)', 'important');\n        }\n        (el.style as any).backdropFilter = 'blur(15px)';\n        (el.style as any).webkitBackdropFilter = 'blur(15px)';\n        el.style.backgroundClip = 'padding-box';\n        el.style.color = 'var(--text-normal)';\n        el.style.whiteSpace = 'pre-wrap';\n        el.style.pointerEvents = 'auto';\n        ;(el.style as any).userSelect = 'text';\n        ;(el.style as any).webkitUserSelect = 'text';\n        try {\n          const stop = (ev: Event) => ev.stopPropagation();\n          el.addEventListener('mousedown', stop);\n          el.addEventListener('mouseup', stop);\n          el.addEventListener('click', stop);\n          el.addEventListener('dblclick', stop);\n        } catch {}\n        this.containerElDiv!.appendChild(el);\n        this.hoverPopupEl = el;\n      }\n      try {\n        const isDarkNow = document.body.classList.contains('theme-dark');\n        this.hoverPopupEl!.style.setProperty('border', isDarkNow ? '1px solid rgba(255,255,255,0.18)' : '1px solid rgba(0,0,0,0.12)', 'important');\n        this.hoverPopupEl!.style.setProperty('background', isDarkNow ? 'rgba(30,30,30,0.68)' : 'rgba(255,255,255,0.85)', 'important');\n      } catch {}\n      try {\n        const popup = this.hoverPopupEl!;\n        if (!(popup as any).__mm_popup_bound) {\n          popup.addEventListener('mouseleave', (ev: MouseEvent) => {\n            const rel = ev.relatedTarget as HTMLElement | null;\n            const intoNode = rel && (rel.closest ? rel.closest('jmnode') : null);\n            if (intoNode) return;\n            if (this.hoverHideTimeoutId != null) { try { window.clearTimeout(this.hoverHideTimeoutId); } catch {} }\n            this.hoverHideTimeoutId = window.setTimeout(() => {\n              this.hoverHideTimeoutId = null;\n              this.hide();\n            }, 150);\n          });\n          (popup as any).__mm_popup_bound = true;\n        }\n      } catch {}\n      if (this.hoverPopupEl && this.hoverPopupEl.parentElement !== this.containerElDiv) {\n        this.containerElDiv!.appendChild(this.hoverPopupEl);\n      }\n      if (this.hoverHideTimeoutId != null) { try { window.clearTimeout(this.hoverHideTimeoutId); } catch {} this.hoverHideTimeoutId = null; }\n      this.hoverPopupForNodeId = nodeId;\n      const popup = this.hoverPopupEl!;\n      try { popup.classList.add('markdown-rendered'); } catch {}\n      popup.style.whiteSpace = 'normal';\n      popup.innerHTML = '';\n      try {\n        MarkdownRenderer.renderMarkdown(body.trim(), popup, this.file?.path ?? '', this.plugin);\n      } catch {\n        const fallback = document.createElement('div');\n        fallback.textContent = body.trim();\n        popup.appendChild(fallback);\n      }\n      this.updatePosition();\n      if (this.hoverPopupRAF == null) {\n        const tick = () => {\n          this.updatePosition();\n          if (this.hoverPopupEl && this.hoverPopupEl.style.display !== 'none') {\n            this.hoverPopupRAF = window.requestAnimationFrame(tick);\n          } else {\n            if (this.hoverPopupRAF != null) { try { window.cancelAnimationFrame(this.hoverPopupRAF); } catch {}; this.hoverPopupRAF = null; }\n          }\n        };\n        this.hoverPopupRAF = window.requestAnimationFrame(tick);\n      }\n    } catch {}\n  }\n\n  hide() {\n    try {\n      if (this.hoverPopupEl) this.hoverPopupEl.style.display = 'none';\n      this.hoverPopupForNodeId = null;\n      if (this.hoverPopupRAF != null) { try { window.cancelAnimationFrame(this.hoverPopupRAF); } catch {}; this.hoverPopupRAF = null; }\n    } catch {}\n  }\n\n  updatePosition() {\n    try {\n      if (!this.hoverPopupEl || !this.containerElDiv || !this.hoverPopupForNodeId) return;\n      const nodeEl = this.containerElDiv.querySelector(`jmnode[nodeid=\"${this.hoverPopupForNodeId}\"]`) as HTMLElement | null;\n      if (!nodeEl) return;\n      const rect = nodeEl.getBoundingClientRect();\n      const hostRect = this.containerElDiv.getBoundingClientRect();\n      const node = this.jm?.get_node?.(this.hoverPopupForNodeId);\n      const isLeft = node && (node.direction === (window.jsMind?.direction?.left ?? 'left'));\n      const gap = 8;\n      const margin = 6;\n      const popupEl = this.hoverPopupEl as HTMLDivElement;\n      if (!popupEl.offsetWidth || !popupEl.offsetHeight || popupEl.style.display === 'none') {\n        popupEl.style.visibility = 'hidden';\n        popupEl.style.display = 'block';\n      }\n      const popupW = popupEl.offsetWidth || 220;\n      const popupH = popupEl.offsetHeight || 180;\n      let x = isLeft ? (rect.left - hostRect.left) - (popupW + gap) : (rect.right - hostRect.left) + gap;\n      if (!isLeft && (x + popupW > hostRect.width - margin)) {\n        x = (rect.left - hostRect.left) - (popupW + gap);\n      }\n      if (x < margin) x = margin;\n      const nodeLeft = rect.left - hostRect.left;\n      const nodeRight = rect.right - hostRect.left;\n      const popupLeft = x;\n      const popupRight = x + popupW;\n      const overlapsHorizontally = !(popupRight <= nodeLeft - gap || popupLeft >= nodeRight + gap);\n      let y: number = rect.top - hostRect.top;\n      if (overlapsHorizontally) {\n        const spaceBelow = hostRect.bottom - rect.bottom - margin;\n        const spaceAbove = rect.top - hostRect.top - margin;\n        if (spaceBelow >= popupH + gap || spaceBelow >= spaceAbove) {\n          y = rect.bottom - hostRect.top + gap;\n        } else {\n          y = rect.top - hostRect.top - popupH - gap;\n          if (y < margin) y = margin;\n        }\n      }\n      popupEl.style.left = `${x}px`;\n      popupEl.style.top = `${Math.max(0, y)}px`;\n      popupEl.style.display = 'block';\n      popupEl.style.visibility = 'visible';\n    } catch {}\n  }\n\n  extractNodeImmediateBody(nodeId: string): string {\n    try {\n      const content = this.lastFileContent || '';\n      if (!content) return '';\n      const headings = (this.headingsCache && (this.headingsCache as any[]).length) ? (this.headingsCache as any[]) : this.computeHeadingSections(content);\n      const idx = headings.findIndex((h: any) => h.id === nodeId);\n      if (idx === -1) return '';\n      const h = headings[idx] as any;\n      const startBody = Math.min(content.length, Math.max(0, h.headingTextEnd + 1));\n      const next = headings[idx + 1] as any;\n      const endBody = next ? Math.max(startBody, next.start - 1) : Math.max(startBody, content.length);\n      const raw = content.slice(startBody, endBody);\n      return raw.replace(/^\\s*\\n/, '').trimEnd();\n    } catch { return ''; }\n  }\n}\n\nexport class ButtonController {\n  containerElDiv: HTMLDivElement | null = null;\n  jm: any | null = null;\n  app: any;\n  plugin: any;\n  file: TFile | null = null;\n  shouldMindmapDriveMarkdown: () => boolean = () => false;\n  isMindmapEditingActive: () => boolean = () => false;\n  addButtonEl: HTMLButtonElement | null = null;\n  deleteButtonEl: HTMLButtonElement | null = null;\n  addButtonForNodeId: string | null = null;\n  addButtonRAF: number | null = null;\n  deleteHeadingById: (id: string) => void = () => {};\n  computeHeadingSections: (text: string) => any[] = () => [];\n\n  show(nodeId: string) {\n    try {\n      if (!this.jm || !this.containerElDiv) return;\n      if (!this.shouldMindmapDriveMarkdown()) return;\n      if (this.isMindmapEditingActive()) return;\n      const node = this.jm.get_node?.(nodeId);\n      if (!node) { this.hide(); return; }\n      let btn = this.addButtonEl;\n      if (!btn) {\n        btn = document.createElement('button');\n        btn.textContent = '+';\n        btn.title = 'Add child';\n        btn.style.position = 'absolute';\n        btn.style.zIndex = '5';\n        btn.style.width = '22px';\n        btn.style.height = '22px';\n        btn.style.lineHeight = '22px';\n        btn.style.padding = '0';\n        btn.style.textAlign = 'center';\n        btn.style.boxSizing = 'border-box';\n        btn.style.borderRadius = '11px';\n        btn.style.border = '1px solid #90c2ff';\n        btn.style.background = '#e8f2ff';\n        btn.style.color = '#0b3d91';\n        btn.style.cursor = 'pointer';\n        this.containerElDiv!.appendChild(btn);\n        this.addButtonEl = btn;\n      }\n      if (this.addButtonEl && this.addButtonEl.parentElement !== this.containerElDiv) {\n        this.containerElDiv!.appendChild(this.addButtonEl);\n      }\n      this.addButtonEl!.onclick = (e) => { e.stopPropagation(); this.addChildUnder(nodeId); };\n      if (!this.deleteButtonEl) {\n        const del = document.createElement('button');\n        del.textContent = '\u2212';\n        del.title = 'Delete node';\n        del.style.position = 'absolute';\n        del.style.zIndex = '5';\n        del.style.width = '22px';\n        del.style.height = '22px';\n        del.style.lineHeight = '22px';\n        del.style.padding = '0';\n        del.style.textAlign = 'center';\n        del.style.boxSizing = 'border-box';\n        del.style.borderRadius = '11px';\n        del.style.border = '1px solid #ff9aa2';\n        del.style.background = '#ffecef';\n        del.style.color = '#cc0033';\n        del.style.cursor = 'pointer';\n        this.containerElDiv!.appendChild(del);\n        this.deleteButtonEl = del;\n      }\n      if (this.deleteButtonEl && this.deleteButtonEl.parentElement !== this.containerElDiv) {\n        this.containerElDiv!.appendChild(this.deleteButtonEl);\n      }\n      this.deleteButtonEl!.onclick = (e) => { e.stopPropagation(); this.deleteHeadingById(nodeId); };\n      this.addButtonForNodeId = nodeId;\n      this.updatePosition();\n      if (this.addButtonRAF == null) {\n        const tick = () => {\n          this.updatePosition();\n          if (this.addButtonEl && this.addButtonEl.style.display !== 'none') {\n            this.addButtonRAF = window.requestAnimationFrame(tick);\n          } else {\n            if (this.addButtonRAF != null) { try { window.cancelAnimationFrame(this.addButtonRAF); } catch {}; this.addButtonRAF = null; }\n          }\n        };\n        this.addButtonRAF = window.requestAnimationFrame(tick);\n      }\n      if (node.isroot && this.deleteButtonEl) {\n        this.deleteButtonEl.style.display = 'none';\n      }\n    } catch {}\n  }\n\n  hide() {\n    try {\n      if (this.addButtonEl) {\n        this.addButtonEl.style.display = 'none';\n        this.addButtonForNodeId = null;\n        if (this.addButtonRAF != null) {\n          try { window.cancelAnimationFrame(this.addButtonRAF); } catch {}\n          this.addButtonRAF = null;\n        }\n      }\n      if (this.deleteButtonEl) {\n        this.deleteButtonEl.style.display = 'none';\n      }\n    } catch {}\n  }\n\n  updatePosition() {\n    try {\n      if (!this.addButtonEl || !this.containerElDiv || !this.addButtonForNodeId) return;\n      const nodeEl = this.containerElDiv.querySelector(`jmnode[nodeid=\"${this.addButtonForNodeId}\"]`) as HTMLElement | null;\n      if (!nodeEl) return;\n      const node = this.jm?.get_node?.(this.addButtonForNodeId);\n      const expanderEl = this.containerElDiv.querySelector(`jmexpander[nodeid=\"${this.addButtonForNodeId}\"]`) as HTMLElement | null;\n      const rect = nodeEl.getBoundingClientRect();\n      const hostRect = this.containerElDiv.getBoundingClientRect();\n      const isLeft = node && (node.direction === (window.jsMind?.direction?.left ?? 'left'));\n      const buttonSize = 22;\n      const gapBase = 8;\n      let xAdd = isLeft ? rect.left - hostRect.left - (buttonSize + gapBase + 6) : rect.right - hostRect.left + gapBase + 6;\n      if (expanderEl) {\n        const expRect = expanderEl.getBoundingClientRect();\n        if (!isLeft) {\n          const minLeft = expRect.right - hostRect.left + gapBase;\n          if (xAdd < minLeft) xAdd = minLeft;\n        } else {\n          const maxLeft = expRect.left - hostRect.left - (buttonSize + gapBase);\n          if (xAdd > maxLeft) xAdd = maxLeft;\n        }\n      }\n      const btnH = (this.addButtonEl?.offsetHeight || 22);\n      const centerYRaw = rect.top - hostRect.top + (rect.height - btnH) / 2;\n      const centerY = Math.round(centerYRaw) - 3;\n      this.addButtonEl.style.left = `${xAdd}px`;\n      this.addButtonEl.style.top = `${centerY}px`;\n      this.addButtonEl.style.transform = '';\n      this.addButtonEl.style.display = 'block';\n      if (this.deleteButtonEl) {\n        const gap = 4;\n        const xDel = isLeft ? xAdd - (buttonSize + gap) : xAdd + (buttonSize + gap);\n        this.deleteButtonEl.style.left = `${xDel}px`;\n        this.deleteButtonEl.style.top = `${centerY}px`;\n        this.deleteButtonEl.style.transform = '';\n        this.deleteButtonEl.style.display = 'block';\n      }\n    } catch {}\n  }\n\n  private focusEditorToRange(line: number, chStart: number, chEnd: number) {\n    try {\n      const mdLeaves = this.app.workspace.getLeavesOfType('markdown');\n      for (const leaf of mdLeaves) {\n        const v = leaf.view as any;\n        if (v?.file?.path === this.file?.path) {\n          const mdView = v as MarkdownView;\n          const editor = mdView.editor;\n          const from = { line, ch: chStart } as any;\n          const to = { line, ch: chEnd } as any;\n          setTimeout(() => {\n            try { this.app.workspace.setActiveLeaf(leaf, { focus: true }); } catch {}\n            try { this.app.workspace.revealLeaf(leaf); } catch {}\n            try { (editor as any).focus?.(); } catch {}\n            try { editor.setSelection(from, to); } catch {}\n            try { (editor as any).scrollIntoView({ from, to }, true); } catch {}\n          }, 0);\n          break;\n        }\n      }\n    } catch {}\n  }\n\n  async addChildUnder(nodeId: string) {\n    if (!this.file) return;\n    const content = await this.app.vault.read(this.file);\n    const headings = this.computeHeadingSections(content);\n    const parent = headings.find((h: any) => h.id === nodeId) ?? null;\n    let levelToInsert = 1;\n    let insertPos = content.length;\n    if (parent) {\n      levelToInsert = Math.min(parent.level + 1, 6);\n      insertPos = Math.min(parent.end + 1, content.length);\n    }\n    const headingPrefix = '#'.repeat(levelToInsert);\n    const needLeadingNewline = insertPos > 0 && content.charAt(insertPos - 1) !== '\\n';\n    const placeholder = '\u65B0\u6807\u9898';\n    const insertText = `${needLeadingNewline ? '\\n' : ''}${headingPrefix} ${placeholder}\\n`;\n    const updated = content.slice(0, insertPos) + insertText + content.slice(insertPos);\n    await this.app.vault.modify(this.file, updated);\n    new Notice('Child heading inserted');\n    const newHeadingStart = insertPos + (needLeadingNewline ? 1 : 0);\n    const before = updated.slice(0, newHeadingStart);\n    const newLineIndex = (before.match(/\\n/g)?.length ?? 0);\n    const chStart = headingPrefix.length + 1;\n    const chEnd = chStart + placeholder.length;\n    this.focusEditorToRange(newLineIndex, chStart, chEnd);\n    this.show(nodeId);\n  }\n}\n\n\nexport class ExportController {\n  containerElDiv: HTMLDivElement | null = null;\n  toolbarEl: HTMLElement | null = null;\n  jm: any | null = null;\n  app: any;\n  plugin: any;\n  file: TFile | null = null;\n  buttonEl: HTMLButtonElement | null = null;\n  menuEl: HTMLDivElement | null = null;\n\n  mount(toolbarEl: HTMLElement) {\n    try {\n      this.toolbarEl = toolbarEl;\n      if (!this.buttonEl) {\n        const btn = document.createElement('button');\n        btn.textContent = 'Export';\n        btn.title = 'Export as PNG or SVG';\n        btn.addEventListener('click', (e) => { e.stopPropagation(); this.toggleMenu(btn); });\n        toolbarEl.appendChild(btn);\n        this.buttonEl = btn;\n      }\n      // Global click to close\n      const closeOnClick = (ev: MouseEvent) => {\n        const t = ev.target as HTMLElement;\n        if (this.menuEl && this.menuEl.style.display !== 'none') {\n          if (!this.menuEl.contains(t) && t !== this.buttonEl) this.hideMenu();\n        }\n      };\n      if (!(document as any).__mm_export_close_bound) {\n        document.addEventListener('click', closeOnClick);\n        (document as any).__mm_export_close_bound = true;\n      }\n    } catch {}\n  }\n\n  private toggleMenu(anchor: HTMLElement) {\n    if (this.menuEl && this.menuEl.style.display !== 'none') { this.hideMenu(); return; }\n    this.showMenu(anchor);\n  }\n\n  private showMenu(anchor: HTMLElement) {\n    try {\n      let menu = this.menuEl;\n      if (!menu) {\n        menu = document.createElement('div');\n        menu.style.position = 'absolute';\n        menu.style.zIndex = '6';\n        menu.style.minWidth = '140px';\n        menu.style.padding = '6px';\n        menu.style.borderRadius = '6px';\n        menu.style.boxShadow = '0 8px 24px rgba(0,0,0,0.25)';\n        const isDark = document.body.classList.contains('theme-dark');\n        menu.style.setProperty('border', isDark ? '1px solid rgba(255,255,255,0.18)' : '1px solid rgba(0,0,0,0.12)', 'important');\n        menu.style.setProperty('background', isDark ? 'rgba(30,30,30,0.92)' : 'rgba(255,255,255,0.98)', 'important');\n        const mkBtn = (label: string) => {\n          const b = document.createElement('button');\n          b.textContent = label;\n          b.style.display = 'block';\n          b.style.width = '100%';\n          b.style.textAlign = 'left';\n          b.style.margin = '4px 0';\n          b.style.padding = '4px 8px';\n          b.addEventListener('click', (e) => e.stopPropagation());\n          return b;\n        };\n        const png1xBtn = mkBtn('Export PNG (1x)');\n        const png2xBtn = mkBtn('Export PNG (2x)');\n        const svgBtn = mkBtn('Export SVG');\n        png1xBtn.onclick = async () => { this.hideMenu(); await this.exportPNG(1); };\n        png2xBtn.onclick = async () => { this.hideMenu(); await this.exportPNG(2); };\n        svgBtn.onclick = async () => { this.hideMenu(); await this.exportSVG(); };\n        menu.appendChild(png1xBtn);\n        menu.appendChild(png2xBtn);\n        menu.appendChild(svgBtn);\n        (this.toolbarEl || document.body).appendChild(menu);\n        this.menuEl = menu;\n      }\n      const ar = anchor.getBoundingClientRect();\n      const root = (this.toolbarEl || document.body);\n      const hostRect = root.getBoundingClientRect ? root.getBoundingClientRect() : { left: 0, bottom: 0 } as any;\n      menu.style.left = `${ar.left - hostRect.left}px`;\n      menu.style.top = `${ar.bottom - hostRect.top + 4}px`;\n      menu.style.display = 'block';\n    } catch {}\n  }\n\n  private hideMenu() {\n    try { if (this.menuEl) this.menuEl.style.display = 'none'; } catch {}\n  }\n\n  private getDefaultFilename(ext: string): string {\n    try {\n      const base = (this.jm?.mind?.name) || (this.file?.basename) || 'mindmap';\n      const safe = String(base).replace(/[/\\\\:*?\"<>|]+/g, '_');\n      return `${safe}.${ext}`;\n    } catch { return `mindmap.${ext}`; }\n  }\n\n  private downloadDataUrl(dataUrl: string, filename: string) {\n    try {\n      const a = document.createElement('a');\n      a.href = dataUrl;\n      (a as any).download = filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch {}\n  }\n\n  private downloadText(text: string, mime: string, filename: string) {\n    try {\n      const blob = new Blob([text], { type: mime });\n      const url = URL.createObjectURL(blob);\n      this.downloadDataUrl(url, filename);\n      setTimeout(() => { try { URL.revokeObjectURL(url); } catch {} }, 0);\n    } catch {}\n  }\n\n  async exportPNG(scale: number = 1) {\n    try {\n      const jm = this.jm;\n      if (!jm) { new Notice('Mindmap not ready'); return; }\n      // Prefer built-in screenshot plugin\n      const filename = this.getDefaultFilename('png');\n      if (jm.screenshot && typeof jm.screenshot.shoot === 'function') {\n        try { if (jm.screenshot.options) jm.screenshot.options.filename = filename.replace(/\\.png$/i, ''); } catch {}\n        const prevDpr = jm.screenshot.dpr ?? jm.view?.device_pixel_ratio ?? (window.devicePixelRatio || 1);\n        const s = Math.min(2, Math.max(1, scale || 1));\n        try { jm.screenshot.dpr = Math.max(1, prevDpr * s); } catch {}\n        try { jm.screenshot.shoot(); } finally {\n          // restore dpr shortly after\n          setTimeout(() => { try { jm.screenshot.dpr = prevDpr; } catch {} }, 500);\n        }\n        return;\n      }\n      // Fallback via dom-to-image on the whole panel\n      const dti = (window as any).domtoimage;\n      if (dti && jm.view?.e_panel) {\n        const node = jm.view.e_panel as HTMLElement;\n        const w = node.clientWidth;\n        const h = node.clientHeight;\n        const s = Math.min(2, Math.max(1, scale || 1));\n        const dataUrl = await dti.toPng(node, {\n          width: Math.round(w * s),\n          height: Math.round(h * s),\n          style: {\n            transform: `scale(${s})`,\n            transformOrigin: 'top left',\n            width: `${w}px`,\n            height: `${h}px`\n          }\n        });\n        this.downloadDataUrl(dataUrl, filename);\n        return;\n      }\n      new Notice('PNG export not available (screenshot plugin missing)');\n    } catch {}\n  }\n\n  async exportSVG() {\n    try {\n      const jm = this.jm;\n      if (!jm) { new Notice('Mindmap not ready'); return; }\n      const w = jm.view?.size?.w || this.containerElDiv?.clientWidth || 800;\n      const h = jm.view?.size?.h || this.containerElDiv?.clientHeight || 600;\n\n      // 1) Serialize graph (edges) as pure SVG\n      let graphSvg = '';\n      try {\n        const eSvg = jm.view.graph?.e_svg as SVGSVGElement | undefined;\n        if (eSvg) {\n          // Clone to avoid mutating DOM, then serialize\n          const clone = eSvg.cloneNode(true) as SVGSVGElement;\n          // Remove width/height on inner to let outer control layout\n          clone.removeAttribute('width');\n          clone.removeAttribute('height');\n          graphSvg = new XMLSerializer().serializeToString(clone);\n        }\n      } catch {}\n\n      // 2) Serialize nodes as pure SVG text (no foreignObject, no raster)\n      const nodesContainer = jm.view?.e_nodes as HTMLElement | undefined;\n      const escAttr = (s: string) => s\n        .replace(/&/g, '&amp;')\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      let nodesTransform = '';\n      let nodesGroup = '';\n      if (nodesContainer) {\n        try {\n          const cs = getComputedStyle(nodesContainer);\n          const t = cs.transform && cs.transform !== 'none' ? cs.transform : '';\n          if (t) nodesTransform = t;\n        } catch {}\n        const parts: string[] = [];\n        // Prepare a canvas context for text measurement\n        const measureCanvas = document.createElement('canvas');\n        const measureCtx = measureCanvas.getContext('2d');\n        const escapeXml = (s: string) => s\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n        const escapeXmlAttr = (s: string) => s\n          .replace(/&/g, '&amp;')\n          .replace(/\"/g, '&quot;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n        const parsePx = (v: string, fallback: number): number => {\n          const n = parseFloat(v || '');\n          return Number.isFinite(n) ? n : fallback;\n        };\n        const computeLineHeightPx = (csNode: CSSStyleDeclaration, fontSizePx: number): number => {\n          const lh = csNode.lineHeight;\n          if (!lh || lh === 'normal') return Math.round(fontSizePx * 1.2);\n          if (lh.endsWith('px')) return parsePx(lh, Math.round(fontSizePx * 1.2));\n          const num = parseFloat(lh);\n          if (Number.isFinite(num)) return Math.round(fontSizePx * num);\n          return Math.round(fontSizePx * 1.2);\n        };\n        const buildFontForMeasure = (csNode: CSSStyleDeclaration): { font: string; fontSizePx: number; fontWeight: string; fontStyle: string; fontFamily: string } => {\n          const fontStyle = csNode.fontStyle || 'normal';\n          const fontVariant = csNode.fontVariant || 'normal';\n          const fontWeight = csNode.fontWeight || '400';\n          const fontSize = csNode.fontSize || '16px';\n          const fontFamilyRaw = csNode.fontFamily || 'sans-serif';\n          const fontFamily = fontFamilyRaw.replace(/[\"']/g, ''); // remove quotes for XML attr safety\n          const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize} ${fontFamily}`;\n          const fontSizePx = parsePx(fontSize, 16);\n          return { font, fontSizePx, fontWeight, fontStyle, fontFamily };\n        };\n        const measureWrappedLines = (text: string, maxWidth: number, ctx: CanvasRenderingContext2D, csNode: CSSStyleDeclaration) => {\n          ctx.save();\n          const { font } = buildFontForMeasure(csNode);\n          ctx.font = font;\n          // Break on explicit newlines first\n          const rawLines = text.replace(/\\r\\n?/g, '\\n').split('\\n');\n          const lines: string[] = [];\n          const hasWhitespace = (s: string) => /\\s/.test(s);\n          const takeFittingPrefix = (base: string, token: string): { fitted: string; rest: string } => {\n            let fitted = '';\n            for (const ch of token) {\n              const w = ctx.measureText(base + fitted + ch).width;\n              if (w <= maxWidth || (base.length === 0 && fitted.length === 0)) {\n                fitted += ch;\n              } else {\n                break;\n              }\n            }\n            return { fitted, rest: token.slice(fitted.length) };\n          };\n          for (const raw of rawLines) {\n            const words = raw.split(/(\\s+)/); // keep spaces tokens\n            let current = '';\n            for (const token of words) {\n              const tentative = current + token;\n              const width = ctx.measureText(tentative).width;\n              if (width <= maxWidth || current.length === 0) {\n                current = tentative;\n                continue;\n              }\n              // If token itself is too long (no spaces case), fallback to character wrap\n              if (!hasWhitespace(token)) {\n                // Prefer to fill the remaining space of current line with part of this long token\n                const { fitted, rest } = takeFittingPrefix(current, token);\n                if (fitted.length > 0) {\n                  lines.push((current + fitted).trimEnd());\n                  // Now wrap the rest by characters across subsequent lines\n                  let remaining = rest;\n                  current = '';\n                  while (remaining.length > 0) {\n                    const { fitted: part, rest: next } = takeFittingPrefix('', remaining);\n                    if (part.length === 0) break;\n                    if (ctx.measureText(part).width <= maxWidth) {\n                      // If this is the last small part, keep it in current for next tokens\n                      remaining = next;\n                      if (remaining.length === 0) {\n                        current = part;\n                        break;\n                      }\n                      lines.push(part);\n                    } else {\n                      lines.push(part);\n                      remaining = next;\n                    }\n                  }\n                } else {\n                  // Cannot fit any part with current; push current and start wrapping token\n                  lines.push(current.trimEnd());\n                  let remaining = token;\n                  current = '';\n                  while (remaining.length > 0) {\n                    const { fitted: part, rest: next } = takeFittingPrefix('', remaining);\n                    if (part.length === 0) break;\n                    if (ctx.measureText(part).width <= maxWidth && next.length === 0) {\n                      current = part;\n                      remaining = next;\n                      break;\n                    } else {\n                      lines.push(part);\n                      remaining = next;\n                    }\n                  }\n                }\n              } else {\n                lines.push(current.trimEnd());\n                current = token.trimStart();\n              }\n            }\n            if (current) lines.push(current.trimEnd());\n          }\n          // Final safety pass: ensure no line width exceeds maxWidth due to rounding\n          const safeMax = Math.max(1, maxWidth - 2); // 2px safety to avoid overflow\n          const hardWrapped: string[] = [];\n          for (const ln of lines) {\n            let current = '';\n            for (const ch of ln) {\n              const w = ctx.measureText(current + ch).width;\n              if (w <= safeMax || current.length === 0) {\n                current += ch;\n              } else {\n                hardWrapped.push(current.trimEnd());\n                current = ch.trimStart();\n              }\n            }\n            if (current) hardWrapped.push(current.trimEnd());\n          }\n          ctx.restore();\n          return hardWrapped;\n        };\n        const nodeList = Array.from(nodesContainer.querySelectorAll('jmnode')) as HTMLElement[];\n        for (const nodeEl of nodeList) {\n          try {\n            const x = nodeEl.offsetLeft;\n            const y = nodeEl.offsetTop;\n            const width = Math.max(1, nodeEl.clientWidth);\n            const height = Math.max(1, nodeEl.clientHeight);\n            const csNode = getComputedStyle(nodeEl);\n            const padL = parsePx(csNode.paddingLeft, 0);\n            const padT = parsePx(csNode.paddingTop, 0);\n            const padR = parsePx(csNode.paddingRight, 0);\n            // Background rectangle if visible\n            const bg = csNode.backgroundColor;\n            const hasBg = bg && bg !== 'transparent' && !/rgba\\(0,\\s*0,\\s*0,\\s*0\\)/i.test(bg);\n            if (hasBg) {\n              parts.push(`<rect x=\"${x}\" y=\"${y}\" width=\"${width}\" height=\"${height}\" fill=\"${bg}\" rx=\"${parsePx(csNode.borderTopLeftRadius, 0)}\" ry=\"${parsePx(csNode.borderTopLeftRadius, 0)}\"/>`);\n            }\n            // Bottom border line for content nodes (mm-content-node)\n            if (nodeEl.classList.contains('mm-content-node')) {\n              const borderColor = (csNode.borderBottomColor && csNode.borderBottomStyle !== 'none') ? csNode.borderBottomColor : getComputedStyle(nodesContainer).getPropertyValue('--background-modifier-border') || '#ccc';\n              const yLine = y + height - parsePx(csNode.borderBottomWidth, 1.5);\n              parts.push(`<line x1=\"${x}\" y1=\"${yLine}\" x2=\"${x + width}\" y2=\"${yLine}\" stroke=\"${borderColor}\" stroke-width=\"${Math.max(1, parsePx(csNode.borderBottomWidth, 1.5))}\"/>`);\n            }\n            // Text rendering\n            const textColor = csNode.color || '#000';\n            const { fontSizePx, fontWeight, fontStyle, fontFamily } = buildFontForMeasure(csNode);\n            const lineHeightPx = computeLineHeightPx(csNode, fontSizePx);\n            // Prefer the actual content div width for wrapping to match on-screen rendering\n            const mmContent = nodeEl.querySelector('.mm-content-text') as HTMLElement | null;\n            let maxTextWidth = Math.max(1, width - padL - padR);\n            let textX = x + padL;\n            if (mmContent) {\n              try {\n                const mr = mmContent.getBoundingClientRect();\n                const nr = nodeEl.getBoundingClientRect();\n                maxTextWidth = Math.max(1, Math.floor(mr.width) - 2); // 2px safety margin\n                textX = x + Math.max(0, Math.round(mr.left - nr.left));\n              } catch {}\n            }\n            // Header nodes (non-content) should not wrap; use effectively unlimited width\n            const isContent = nodeEl.classList.contains('mm-content-node');\n            if (!isContent) {\n              maxTextWidth = 600;\n            }\n            const content = mmContent ? (mmContent.innerText || '') : (nodeEl.innerText || '');\n            const lines = (measureCtx ? measureWrappedLines(content, maxTextWidth, measureCtx, csNode) : content.split(/\\r?\\n/));\n            const textYTop = y + padT;\n            // Build <text> with tspans\n            const tspans: string[] = [];\n            let dy = 0;\n            for (const line of lines) {\n              const esc = escapeXml(line);\n              // Use dy for subsequent lines; first line uses dominant-baseline hanging from top\n              if (dy === 0) {\n                tspans.push(`<tspan x=\"${textX}\" dy=\"0\">${esc}</tspan>`);\n                dy += lineHeightPx;\n              } else {\n                tspans.push(`<tspan x=\"${textX}\" dy=\"${lineHeightPx}\">${esc}</tspan>`);\n              }\n            }\n            const textEl = `<text x=\"${textX}\" y=\"${textYTop}\" fill=\"${escapeXmlAttr(textColor)}\" font-family=\"${escapeXmlAttr(fontFamily)}\" font-size=\"${fontSizePx}px\" font-weight=\"${escapeXmlAttr(fontWeight)}\" font-style=\"${escapeXmlAttr(fontStyle)}\" dominant-baseline=\"hanging\">${tspans.join('')}</text>`;\n            parts.push(textEl);\n          } catch {}\n        }\n        nodesGroup = parts.join('');\n      }\n\n      // 3) Compose final SVG without any embedded image data\n      const svgOpen = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${w}\" height=\"${h}\">`;\n      const svgClose = `</svg>`;\n      const groupOpen = nodesTransform ? `<g transform=\"${escAttr(nodesTransform)}\">` : `<g>`;\n      const groupClose = `</g>`;\n      const svg = [\n        svgOpen,\n        graphSvg,\n        groupOpen,\n        nodesGroup,\n        groupClose,\n        svgClose\n      ].join('');\n\n      const filename = this.getDefaultFilename('svg');\n      this.downloadText(svg, 'image/svg+xml;charset=utf-8', filename);\n    } catch {}\n  }\n}\n\n", "export type ThemeName = 'default' | 'fresh' | 'business' | 'nature' | 'elegant' | 'fashion' | 'minimal';\n\nexport const THEME_OPTIONS: Array<{ key: ThemeName; label: string }> = [\n  { key: 'default', label: '\u9ED8\u8BA4' },\n  { key: 'fresh', label: '\u6E05\u65B0' },\n  { key: 'business', label: '\u5546\u52A1' },\n  { key: 'nature', label: '\u81EA\u7136' },\n  { key: 'elegant', label: '\u4F18\u96C5' },\n  { key: 'fashion', label: '\u65F6\u5C1A' },\n  { key: 'minimal', label: '\u6781\u7B80' },\n];\n\nexport function getJsMindThemeNameFromSetting(theme: ThemeName): string {\n  // Avoid colliding with jsMind's built-in 'default' semantics by mapping to a custom name\n  if (theme === 'default') return 'obsidian';\n  return theme;\n}\n\nexport function ensureThemeCssInjected(doc: Document) {\n  const id = 'obsidian-jsmind-themes';\n  const existing = doc.getElementById(id) as HTMLStyleElement | null;\n  if (existing) {\n    existing.textContent = buildThemesCss();\n    try { existing.parentElement?.removeChild(existing); } catch {}\n    doc.head.appendChild(existing);\n    return;\n  }\n  const st = doc.createElement('style');\n  st.id = id;\n  st.textContent = buildThemesCss();\n  doc.head.appendChild(st);\n}\n\nfunction buildThemesCss(): string {\n  // Background-only themes, light/dark aware. We do not touch text color or borders.\n  // Each theme defines jmnode backgrounds for normal/root/selected states.\n  const css: string[] = [];\n  const push = (s: string) => css.push(s);\n\n  // Default (\u6620\u5C04\u4E3A theme-obsidian): \u84DD\u8272\u5F3A\u8C03\u3001\u7EAF\u8272\u80CC\u666F\n  push(`\n    body:not(.theme-dark) jmnodes.theme-obsidian jmnode { background: rgb(225, 235, 255) !important; background-color: rgb(225, 235, 255) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-obsidian jmnode { background: rgb(50, 70, 120) !important; background-color: rgb(50, 70, 120) !important; background-image: none !important; }\n    body jmnodes.theme-obsidian jmnode.root { background: var(--interactive-accent) !important; background-color: var(--interactive-accent) !important; background-image: none !important; }\n    body jmnodes.theme-obsidian jmnode.selected { background: var(--interactive-accent) !important; background-color: var(--interactive-accent) !important; background-image: none !important; }\n  `);\n\n  // Fresh (\u6E05\u65B0): teal/green\n  push(`\n    body:not(.theme-dark) jmnodes.theme-fresh jmnode { background: rgb(210, 246, 235) !important; background-color: rgb(210, 246, 235) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-fresh jmnode { background: rgb(30, 90, 75) !important; background-color: rgb(30, 90, 75) !important; background-image: none !important; }\n    body jmnodes.theme-fresh jmnode.root { background: rgb(56, 217, 169) !important; background-color: rgb(56, 217, 169) !important; background-image: none !important; }\n    body jmnodes.theme-fresh jmnode.selected { background: rgb(56, 217, 169) !important; background-color: rgb(56, 217, 169) !important; background-image: none !important; }\n  `);\n\n  // Business (\u5546\u52A1): blue/gray\n  push(`\n    body:not(.theme-dark) jmnodes.theme-business jmnode { background: rgb(226, 235, 255) !important; background-color: rgb(226, 235, 255) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-business jmnode { background: rgb(35, 55, 100) !important; background-color: rgb(35, 55, 100) !important; background-image: none !important; }\n    body jmnodes.theme-business jmnode.root { background: rgb(33, 99, 255) !important; background-color: rgb(33, 99, 255) !important; background-image: none !important; }\n    body jmnodes.theme-business jmnode.selected { background: rgb(33, 99, 255) !important; background-color: rgb(33, 99, 255) !important; background-image: none !important; }\n  `);\n\n  // Nature (\u81EA\u7136): green/olive\n  push(`\n    body:not(.theme-dark) jmnodes.theme-nature jmnode { background: rgb(226, 239, 223) !important; background-color: rgb(226, 239, 223) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-nature jmnode { background: rgb(40, 70, 40) !important; background-color: rgb(40, 70, 40) !important; background-image: none !important; }\n    body jmnodes.theme-nature jmnode.root { background: rgb(97, 165, 90) !important; background-color: rgb(97, 165, 90) !important; background-image: none !important; }\n    body jmnodes.theme-nature jmnode.selected { background: rgb(97, 165, 90) !important; background-color: rgb(97, 165, 90) !important; background-image: none !important; }\n  `);\n\n  // Elegant (\u4F18\u96C5): purple\n  push(`\n    body:not(.theme-dark) jmnodes.theme-elegant jmnode { background: rgb(236, 226, 250) !important; background-color: rgb(236, 226, 250) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-elegant jmnode { background: rgb(60, 45, 85) !important; background-color: rgb(60, 45, 85) !important; background-image: none !important; }\n    body jmnodes.theme-elegant jmnode.root { background: rgb(142, 84, 233) !important; background-color: rgb(142, 84, 233) !important; background-image: none !important; }\n    body jmnodes.theme-elegant jmnode.selected { background: rgb(142, 84, 233) !important; background-color: rgb(142, 84, 233) !important; background-image: none !important; }\n  `);\n\n  // Fashion (\u65F6\u5C1A): pink/coral\n  push(`\n    body:not(.theme-dark) jmnodes.theme-fashion jmnode { background: rgb(255, 230, 238) !important; background-color: rgb(255, 230, 238) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-fashion jmnode { background: rgb(90, 35, 50) !important; background-color: rgb(90, 35, 50) !important; background-image: none !important; }\n    body jmnodes.theme-fashion jmnode.root { background: rgb(255, 99, 132) !important; background-color: rgb(255, 99, 132) !important; background-image: none !important; }\n    body jmnodes.theme-fashion jmnode.selected { background: rgb(255, 99, 132) !important; background-color: rgb(255, 99, 132) !important; background-image: none !important; }\n  `);\n\n  // Minimal (\u6781\u7B80): neutral\n  push(`\n    body:not(.theme-dark) jmnodes.theme-minimal jmnode { background: rgb(238, 238, 238) !important; background-color: rgb(238, 238, 238) !important; background-image: none !important; }\n    body.theme-dark jmnodes.theme-minimal jmnode { background: rgb(48, 48, 48) !important; background-color: rgb(48, 48, 48) !important; background-image: none !important; }\n    body jmnodes.theme-minimal jmnode.root { background: var(--interactive-accent) !important; background-color: var(--interactive-accent) !important; background-image: none !important; }\n    body jmnodes.theme-minimal jmnode.selected { background: var(--interactive-accent) !important; background-color: var(--interactive-accent) !important; background-image: none !important; }\n  `);\n\n  // Dark mode text color: force white for readability across all themes\n  push(`\n    body.theme-dark jmnodes.theme-obsidian jmnode,\n    body.theme-dark jmnodes.theme-obsidian jmnode .topic,\n    body.theme-dark jmnodes.theme-obsidian jmnode .topicbody,\n    body.theme-dark jmnodes.theme-fresh jmnode,\n    body.theme-dark jmnodes.theme-fresh jmnode .topic,\n    body.theme-dark jmnodes.theme-fresh jmnode .topicbody,\n    body.theme-dark jmnodes.theme-business jmnode,\n    body.theme-dark jmnodes.theme-business jmnode .topic,\n    body.theme-dark jmnodes.theme-business jmnode .topicbody,\n    body.theme-dark jmnodes.theme-nature jmnode,\n    body.theme-dark jmnodes.theme-nature jmnode .topic,\n    body.theme-dark jmnodes.theme-nature jmnode .topicbody,\n    body.theme-dark jmnodes.theme-elegant jmnode,\n    body.theme-dark jmnodes.theme-elegant jmnode .topic,\n    body.theme-dark jmnodes.theme-elegant jmnode .topicbody,\n    body.theme-dark jmnodes.theme-fashion jmnode,\n    body.theme-dark jmnodes.theme-fashion jmnode .topic,\n    body.theme-dark jmnodes.theme-fashion jmnode .topicbody,\n    body.theme-dark jmnodes.theme-minimal jmnode,\n    body.theme-dark jmnodes.theme-minimal jmnode .topic,\n    body.theme-dark jmnodes.theme-minimal jmnode .topicbody { color: #ffffff !important; }\n  `);\n\n  return css.join('\\n');\n}\n\n\n"],
  "mappings": "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",
  "names": ["import_obsidian", "popup", "h", "w", "inCode", "depth", "container", "cleanedLabel", "node"]
}
